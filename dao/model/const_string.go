// Code generated by "stringer -type=Role,Status,AccessMode,JobStatus,ImageTaskType,WorkerType,ImageSourceType,AlertType -output=const_string.go"; DO NOT EDIT.

package model

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[RoleGuest-1]
	_ = x[RoleUser-2]
	_ = x[RoleAdmin-3]
}

const _Role_name = "RoleGuestRoleUserRoleAdmin"

var _Role_index = [...]uint8{0, 9, 17, 26}

func (i Role) String() string {
	i -= 1
	if i >= Role(len(_Role_index)-1) {
		return "Role(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Role_name[_Role_index[i]:_Role_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[StatusPending-1]
	_ = x[StatusActive-2]
	_ = x[StatusInactive-3]
}

const _Status_name = "StatusPendingStatusActiveStatusInactive"

var _Status_index = [...]uint8{0, 13, 25, 39}

func (i Status) String() string {
	i -= 1
	if i >= Status(len(_Status_index)-1) {
		return "Status(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _Status_name[_Status_index[i]:_Status_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[AccessModeNA-1]
	_ = x[AccessModeRO-2]
	_ = x[AccessModeRW-3]
	_ = x[AccessModeAO-4]
}

const _AccessMode_name = "AccessModeNAAccessModeROAccessModeRWAccessModeAO"

var _AccessMode_index = [...]uint8{0, 12, 24, 36, 48}

func (i AccessMode) String() string {
	i -= 1
	if i >= AccessMode(len(_AccessMode_index)-1) {
		return "AccessMode(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _AccessMode_name[_AccessMode_index[i]:_AccessMode_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[JobInitial-1]
	_ = x[JobCreated-2]
	_ = x[JobRunning-3]
	_ = x[JobSucceeded-4]
	_ = x[JobFailed-5]
	_ = x[JobPreempted-6]
}

const _JobStatus_name = "JobInitialJobCreatedJobRunningJobSucceededJobFailedJobPreempted"

var _JobStatus_index = [...]uint8{0, 10, 20, 30, 42, 51, 63}

func (i JobStatus) String() string {
	i -= 1
	if i >= JobStatus(len(_JobStatus_index)-1) {
		return "JobStatus(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _JobStatus_name[_JobStatus_index[i]:_JobStatus_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[JupyterTask-1]
	_ = x[WebIDETask-2]
	_ = x[TensorflowTask-3]
	_ = x[PytorchTask-4]
	_ = x[RayTask-5]
	_ = x[DeepSpeedTask-6]
	_ = x[OpenMPITask-7]
	_ = x[UserDefineTask-8]
}

const _ImageTaskType_name = "JupyterTaskWebIDETaskTensorflowTaskPytorchTaskRayTaskDeepSpeedTaskOpenMPITaskUserDefineTask"

var _ImageTaskType_index = [...]uint8{0, 11, 21, 35, 46, 53, 66, 77, 91}

func (i ImageTaskType) String() string {
	i -= 1
	if i >= ImageTaskType(len(_ImageTaskType_index)-1) {
		return "ImageTaskType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ImageTaskType_name[_ImageTaskType_index[i]:_ImageTaskType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Nvidia-1]
	_ = x[Enflame-2]
	_ = x[Unknown-3]
}

const _WorkerType_name = "NvidiaEnflameUnknown"

var _WorkerType_index = [...]uint8{0, 6, 13, 20}

func (i WorkerType) String() string {
	i -= 1
	if i >= WorkerType(len(_WorkerType_index)-1) {
		return "WorkerType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _WorkerType_name[_WorkerType_index[i]:_WorkerType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ImageCreateType-1]
	_ = x[ImageUploadType-2]
}

const _ImageSourceType_name = "ImageCreateTypeImageUploadType"

var _ImageSourceType_index = [...]uint8{0, 15, 30}

func (i ImageSourceType) String() string {
	i -= 1
	if i >= ImageSourceType(len(_ImageSourceType_index)-1) {
		return "ImageSourceType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ImageSourceType_name[_ImageSourceType_index[i]:_ImageSourceType_index[i+1]]
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[JobRunningAlert-1]
	_ = x[JobFailedAlert-2]
	_ = x[JobCompletedAlert-3]
	_ = x[LowGPUJobRemindedAlert-4]
	_ = x[LowGPUJobDeletedAlert-5]
	_ = x[LongTimeJobRemindedAlert-6]
	_ = x[LongTimeJobDeletedAlert-7]
}

const _AlertType_name = "JobRunningAlertJobFailedAlertJobCompletedAlertLowGPUJobRemindedAlertLowGPUJobDeletedAlertLongTimeJobRemindedAlertLongTimeJobDeletedAlert"

var _AlertType_index = [...]uint8{0, 15, 29, 46, 68, 89, 113, 136}

func (i AlertType) String() string {
	i -= 1
	if i >= AlertType(len(_AlertType_index)-1) {
		return "AlertType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _AlertType_name[_AlertType_index[i]:_AlertType_index[i+1]]
}
