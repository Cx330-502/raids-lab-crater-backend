// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "校验用户身份，生成包含当前用户和项目的 JWT Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "查询参数",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handler.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登录成功，返回 JWT Token 和默认个人项目",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_LoginResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "401": {
                        "description": "用户名或密码错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "数据库交互错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/auth/mode": {
            "get": {
                "description": "返回后端部署的config值",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "获取后端用户认证模式",
                "responses": {
                    "200": {
                        "description": "启用认证类型",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "获取相关配置时错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/metrics": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "返回Prometheus能够识别的信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Metrics"
                ],
                "summary": "获取系统中每种Status的Job的数量",
                "responses": {
                    "200": {
                        "description": "成功返回",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/resputil.Response-any"
                            }
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/accounts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "连接用户账户表和账户表，获取用户的所有账户的摘要信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取用户的所有账户",
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-array_handler_AccountResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/accounts/{name}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据账户名称获取账户的信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取指定账户",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "账户信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/accounts/{aid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据账户ID获取账户的信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取指定账户",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "账户信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/dataset/alldataset": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取所有数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "获取所有数据集",
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/dataset/cancelshare/queue": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员取消数据共享队列",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "管理员取消数据共享队列",
                "parameters": [
                    {
                        "description": "共享数据集队列",
                        "name": "queueReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.cancelSharedQueueReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/dataset/cancelshare/user": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员取消数据集共享用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "管理员取消数据集共享用户",
                "parameters": [
                    {
                        "description": "共享数据集用户",
                        "name": "Req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.cancelsharedUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/dataset/share/queue": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员对队列分享数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "管理员对队列分享数据集",
                "parameters": [
                    {
                        "description": "共享数据集队列",
                        "name": "queueReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SharedQueueReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/dataset/share/user": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员对用户分享数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "管理员对用户分享数据集",
                "parameters": [
                    {
                        "description": "共享数据集用户",
                        "name": "userReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SharedUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/images/deletekaniko": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员模式下遍历列表，根据ID更新Kaniko的状态为Deleted，起到删除的功能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员模式下根据IDList删除Kaniko entity",
                "parameters": [
                    {
                        "description": "删除kaniko的IDList",
                        "name": "IDList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/admin/images/description": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新描述",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员模式下更新镜像的描述",
                "responses": {}
            }
        },
        "/v1/admin/images/image": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "所有的镜像数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员获取所有镜像数据",
                "responses": {}
            }
        },
        "/v1/admin/images/kaniko": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员获取所有镜像制作信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员获取相关镜像的功能",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取参数，生成变量，调用接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "创建ImagePack CRD和数据库kaniko entity",
                "parameters": [
                    {
                        "description": "创建ImagePack",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.CreateKanikoRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/admin/images/tags": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员更新标签",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员更新镜像的标签",
                "responses": {}
            }
        },
        "/v1/admin/images/type": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新任务类型",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员更新镜像的任务类型",
                "responses": {}
            }
        },
        "/v1/admin/operations/cleanup": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete batch jobs older than 4 days and interactive jobs older than 1 day",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Cleanup jobs based on type and duration",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "batchDays",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "interactiveDays",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取所有账户的摘要信息，支持筛选条件、分页和排序",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取所有账户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "部分匹配账户名称",
                        "name": "nameLike",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "Asc",
                            "Desc"
                        ],
                        "description": "排序方式（升序、降序）",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "排序字段",
                        "name": "orderCol",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "第几页（从0开始）",
                        "name": "pageIndex",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "每页大小",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "账户列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects/add/{aid}/{uid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "创建一个userproject",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "向账户中添加用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "aid",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "权限角色",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "返回添加的用户名和队列名",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects/update/{aid}/{uid}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "创建一个userQueue条目",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "更新账户用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "aid",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "权限角色",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "返回添加的用户名和队列名",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "删除对应userQueue条目",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "删除账户用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "uid",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "aid",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "返回添加的用户名和队列名",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects/userIn/{aid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "sql查询-join",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取账户下的用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "aid",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "userQueue条目",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects/userOutOf/{aid}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "sql查询-subquery",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取账户外的用户",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "aid",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "userQueue条目",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects/{aid}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新配额",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "更新配额",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功更新配额",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "删除账户record和队列crd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "删除账户",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "aid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除的队列名",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_DeleteProjectResp"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/resources/link": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This API will create a relationship between a GPU resource and an RDMA resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "Link a GPU resource to an RDMA resource",
                "parameters": [
                    {
                        "description": "GPU and RDMA IDs to link",
                        "name": "linkRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.LinkResourceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/resources/sync": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This API will get the allocatable resources from the Kubernetes cluster and update the database with the latest information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "Get allocatable resources from the Kubernetes cluster and update the database",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/resources/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This API will update the label or type of a resource based on the specified ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "Update a resource's attributes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource attributes to update",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateResourceReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This API will delete a resource based on the specified ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "Delete a resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/resources/{id}/networks/{networkId}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This API will delete the link between a GPU resource and an RDMA resource based on the specified IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "Delete the link between a GPU resource and an RDMA resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GPU Resource ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "RDMA Resource ID",
                        "name": "networkId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "列出用户信息（包含私人配额）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "列出用户信息",
                "responses": {
                    "200": {
                        "description": "成功获取用户信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users/baseinfo": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "列出用户信息，姓名，昵称，用户空间",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "列出用户基本信息",
                "responses": {
                    "200": {
                        "description": "成功获取用户信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users/{name}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "删除用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "删除用户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users/{name}/attributes": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员更新指定用户的属性",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "管理员更新用户属性",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "用户属性",
                        "name": "attributes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserAttribute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "用户属性更新成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users/{name}/role": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "更新角色",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新角色成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/vcjobs/{name}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员删除用户作业",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Admin delete the job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/aijobs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "ListUserJob AI jobs by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AIJob"
                ],
                "summary": "ListUserJob AI jobs",
                "responses": {
                    "200": {
                        "description": "AI Job ListUserJob",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/aijobs/quota": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the quota of the queue by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AIJob"
                ],
                "summary": "Get the quota of the queue",
                "responses": {
                    "200": {
                        "description": "Quota Information",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/aijobs/training": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "CreateCustom a new AI job by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AIJob"
                ],
                "summary": "CreateCustom a new AI job",
                "parameters": [
                    {
                        "description": "CreateCustom AI Job Request",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CreateCustom AI Job Response",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/aijobs/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an AI job by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AIJob"
                ],
                "summary": "Delete an AI job",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete AI Job Response",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/aijobs/{id}/detail": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "GetDetail AI job details by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AIJob"
                ],
                "summary": "GetDetail AI job details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AI Job Details",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/aijobs/{id}/event": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取AI任务的事件",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AIJob"
                ],
                "summary": "获取AI任务的事件",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "事件列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/aijobs/{id}/yaml": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "调用k8s get crd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vcjob-jupyter"
                ],
                "summary": "获取vcjob Yaml详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vcjob-name",
                        "name": "jobname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "任务yaml",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/amdin/images/deleteimage": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "管理员模式根据ID列表的ID更新Image的状态为Deleted，起到删除的功能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员模式根据ID列表删除Image",
                "parameters": [
                    {
                        "description": "删除镜像的ID",
                        "name": "ID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/auth/switch": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "读取body中的项目ID，生成新的 JWT Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "类似登录，切换项目并返回新的 JWT Token",
                "parameters": [
                    {
                        "description": "项目ID",
                        "name": "project_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SwitchQueueReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "用户上下文",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_LoginResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/context/attributes": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update the attributes of the current user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Context"
                ],
                "summary": "Update user attributes",
                "parameters": [
                    {
                        "description": "User attributes",
                        "name": "attributes",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserAttribute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User attributes updated",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/context/email/code": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "generate random code and save, send it to the user's email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Context"
                ],
                "summary": "Send User Verification Code for email",
                "responses": {
                    "200": {
                        "description": "Successfully send email verification code to user",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/context/email/update": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "judge code and update email for user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Context"
                ],
                "summary": "Update after judging Verification Code for email",
                "responses": {
                    "200": {
                        "description": "User email updated successfully",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/context/queue": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "query the queue information by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Context"
                ],
                "summary": "Get the queue information",
                "responses": {
                    "200": {
                        "description": "Volcano Queue Quota",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/cancelshare/queue": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "普通用户取消数据共享队列",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "普通用户取消数据共享队列",
                "parameters": [
                    {
                        "description": "共享数据集队列",
                        "name": "queueReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.cancelSharedQueueReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/cancelshare/user": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "普通用户取消数据集共享",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "普通用户取消数据集共享用户",
                "parameters": [
                    {
                        "description": "共享数据集用户",
                        "name": "Req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.cancelsharedUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "输入数据集名字和URL，创建数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "创建数据集",
                "parameters": [
                    {
                        "description": "参数描述",
                        "name": "datasetReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.DatasetReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "删除数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "删除数据集",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/detail/{datasetId}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "通过数据集id获取数据集信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "通过数据集id获取数据集信息",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/mydataset": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "获取数据集",
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/share/queue": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "跟队列共享数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "跟队列共享数据集",
                "parameters": [
                    {
                        "description": "共享数据集队列",
                        "name": "queueReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SharedQueueReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/share/user": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "跟用户共享数据集",
                "parameters": [
                    {
                        "description": "共享数据集用户",
                        "name": "userReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SharedUserReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/update": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新数据集",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "更新数据集",
                "parameters": [
                    {
                        "description": "参数描述",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateDatasetreq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{datasetId}/queuesIn": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "数据集的共享队列",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "数据集的共享队列",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{datasetId}/queuesNotIn": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "没有该数据集权限的队列列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "没有该数据集权限的队列列表",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{datasetId}/usersIn": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取该数据集共享用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "获取该数据集共享用户",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/dataset/{datasetId}/usersNotIn": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "没有该数据集权限的用户列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dataset"
                ],
                "summary": "没有该数据集权限的用户列表",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "datasetId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/images/account": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取未被分享该镜像的账户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取未被分享该镜像的账户",
                "responses": {}
            }
        },
        "/v1/images/available": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "用userID \u0026 jobType 来过滤已完成的镜像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "用户在运行作业时选择镜像需要调用此接口，来获取可以用的镜像",
                "parameters": [
                    {
                        "enum": [
                            "all",
                            "jupyter",
                            "webide",
                            "pytorch",
                            "tensorflow",
                            "kuberay",
                            "deepspeed",
                            "openmpi",
                            "custom"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "JobTypeAll",
                            "JobTypeJupyter",
                            "JobTypeWebIDE",
                            "JobTypePytorch",
                            "JobTypeTensorflow",
                            "JobTypeKubeRay",
                            "JobTypeDeepSpeed",
                            "JobTypeOpenMPI",
                            "JobTypeCustom"
                        ],
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/change": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "传入uint参数",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员模式下更新镜像的公共或私有状态",
                "parameters": [
                    {
                        "description": "更新镜像的ID",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.ChangeImagePublicStatusRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/credential": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取参数，生成变量，调用接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "创建用户的harbor项目，并返回用户的harbor项目的凭证",
                "responses": {}
            }
        },
        "/v1/images/deleteimage": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "用户模式根据ID列表的ID更新Image的状态为Deleted，起到删除的功能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "用户模式根据ID列表删除Image",
                "parameters": [
                    {
                        "description": "删除镜像的ID",
                        "name": "ID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/deletekaniko": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "遍历列表，根据ID更新Kaniko的状态为Deleted，起到删除的功能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "根据IDList删除Kaniko entity",
                "parameters": [
                    {
                        "description": "删除kaniko的IDList",
                        "name": "IDList",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/description": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新描述",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "更新镜像的描述",
                "responses": {}
            }
        },
        "/v1/images/dockerfile": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取参数，提取Dockerfile中的基础镜像，调用接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "接受用户传入的Dockerfile和描述，创建镜像",
                "parameters": [
                    {
                        "description": "创建ImagePack CRD",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.CreateByDockerfileRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/envd": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取参数，提取Dockerfile中的基础镜像，调用接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "接受用户传入的Envd内容和描述，创建镜像",
                "parameters": [
                    {
                        "description": "创建ImagePack CRD",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.CreateByEnvdRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取imagepackname，搜索到imagepack的模板信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取imagepack的模板信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "获取ImagePack的name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/grant": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取镜像分享到的用户或账户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取镜像分享到的用户或账户",
                "responses": {}
            }
        },
        "/v1/images/harbor": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "通过后端获取harbor的部署地址",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取harbor的部署地址",
                "responses": {}
            }
        },
        "/v1/images/image": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "返回该用户所有的镜像数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "用户获取所有镜像数据",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取上传镜像的参数，生成变量，调用接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "用户上传镜像链接",
                "parameters": [
                    {
                        "description": "创建Image entity",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.UploadImageRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/image/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据ID更新Image的状态为Deleted，起到删除的功能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "根据ID删除Image",
                "parameters": [
                    {
                        "description": "删除镜像的ID",
                        "name": "ID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/kaniko": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "返回该用户所有的镜像构建数据",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "用户获取镜像构建信息",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取参数，生成变量，调用接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "创建ImagePack CRD和数据库Kaniko entity",
                "parameters": [
                    {
                        "description": "创建ImagePack CRD \u0026 Kaniko entity",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.CreateKanikoRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/kaniko/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据ID更新Kaniko的状态为Deleted，起到删除的功能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "根据ID删除Kaniko entity",
                "parameters": [
                    {
                        "description": "删除镜像的ID",
                        "name": "ID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/podname": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据ID获取镜像构建Pod名称和命名空间",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取镜像构建Pod名称",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "镜像构建任务ID",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/quota": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取用户的project的详细信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取用户project的信息",
                "responses": {}
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "传入int64参数，查找用户的project，并更新镜像存储的配额",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "更新project的配额",
                "parameters": [
                    {
                        "description": "更新镜像的ID和存储大小",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/image.UpdateProjectQuotaRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/images/share": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "普通用户分享镜像到其他账户或用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "分享镜像到账户或用户",
                "responses": {}
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "普通用户取消分享镜像到其他账户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "取消分享镜像到账户",
                "responses": {}
            }
        },
        "/v1/images/tags": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新标签",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "更新镜像的标签",
                "responses": {}
            }
        },
        "/v1/images/type": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新任务类型",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "更新镜像的任务类型",
                "responses": {}
            }
        },
        "/v1/images/user": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取未被分享该镜像的用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取未被分享该镜像的用户（支持名称模糊搜索）",
                "responses": {}
            }
        },
        "/v1/images/valid": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "通过获取的镜像链接列表，遍历其中的链接，检查是否有效",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "检查镜像链接是否有效",
                "responses": {}
            }
        },
        "/v1/jobtemplate/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "创建作业模板",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobtemplate"
                ],
                "summary": "创建作业模板",
                "parameters": [
                    {
                        "description": "作业模板",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.JobTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/jobtemplate/delete/{id}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "删除作业模板",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobtemplate"
                ],
                "summary": "删除作业模板",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "作业模板ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/jobtemplate/list": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "展示所有作业模板",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobtemplate"
                ],
                "summary": "展示所有作业模板",
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/jobtemplate/update": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新作业模板",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobtemplate"
                ],
                "summary": "更新作业模板",
                "parameters": [
                    {
                        "description": "作业模板",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateJobTemplateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/jobtemplate/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取作业模板",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobtemplate"
                ],
                "summary": "获取作业模板",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "作业模板ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/namespaces/{namespace}/pods/{name}/containers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取Pod的容器列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "获取Pod的容器列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod容器列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/namespaces/{namespace}/pods/{name}/containers/{container}/log": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取Pod容器日志",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "获取Pod容器日志",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "容器名称",
                        "name": "container",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "页码",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "每页数量",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod容器日志",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/namespaces/{namespace}/pods/{name}/containers/{container}/resources": {
            "put": {
                "description": "edit pod's resources(cpu, mem)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "edit pod's resources(cpu, mem)",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/namespaces/{namespace}/pods/{name}/events": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取Pod的事件",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "获取Pod的事件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "任务名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod事件列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "404": {
                        "description": "任务未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/namespaces/{namespace}/pods/{name}/ingresses": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "通过Pod注解获取相关的Ingress规则",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "获取Pod的Ingress规则",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod Ingress规则列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-tool_PodIngressResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "404": {
                        "description": "Pod未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "为指定Pod创建新的Ingress规则，规则名称和端口号必须唯一",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "创建新的Pod Ingress规则",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Ingress规则内容",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tool.PodIngressMgr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功创建的Ingress规则",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-tool_PodIngress"
                        }
                    },
                    "400": {
                        "description": "请求参数错误或规则冲突",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "404": {
                        "description": "Pod未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据规则名称删除指定的Ingress规则，同时删除关联的Service和Ingress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "删除Pod的Ingress规则",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "要删除的Ingress规则",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tool.PodIngressMgr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ingress规则删除成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误或Ingress规则未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "404": {
                        "description": "Pod未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/namespaces/{namespace}/pods/{name}/nodeports": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "通过Pod的labels选择相关的Service并获取NodePort规则",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "获取Pod的NodePort规则",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod NodePort规则列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-tool_PodNodeportResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "404": {
                        "description": "Pod未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "为指定Pod创建新的NodePort规则，规则名称和端口号必须唯一",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "创建新的Pod NodePort规则",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "NodePort规则内容",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tool.PodNodeportMgr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功创建的NodePort规则",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-tool_PodNodeport"
                        }
                    },
                    "400": {
                        "description": "请求参数错误或规则冲突",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "404": {
                        "description": "Pod未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据规则名称删除指定的NodePort规则，同时删除关联的Service",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Pod"
                ],
                "summary": "删除Pod的NodePort规则",
                "parameters": [
                    {
                        "type": "string",
                        "description": "命名空间",
                        "name": "namespace",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Pod名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "要删除的NodePort规则",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tool.PodNodeportMgr"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "NodePort规则删除成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误或NodePort规则未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "404": {
                        "description": "Pod未找到",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "kubectl + prometheus获取节点基本信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "获取节点基本信息",
                "responses": {
                    "200": {
                        "description": "成功返回值描述，注意这里返回Json字符串，swagger无法准确解析",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes/name/taint": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "匹配是否存在该污点，存在则删除",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "接口对应的标签"
                ],
                "summary": "删除节点的污点",
                "parameters": [
                    {
                        "description": "节点名称+污点",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.NodeTaint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes/{name}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "kubectl + prometheus获取节点详细信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "获取节点详细信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-crclient_ClusterNodeDetail"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "介绍函数的主要实现逻辑",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "接口对应的标签"
                ],
                "summary": "更新节点调度状态",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点名称",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes/{name}/gpu/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "查询prometheus获取GPU各节点的利用率",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "获取GPU各节点的利用率",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-crclient_GPUInfo"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes/{name}/pod/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "kubectl + prometheus获取节点Pod信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "获取节点Pod信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes/{name}/taint": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "通过nodeclient调用k8s接口添加节点污点",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "接口对应的标签"
                ],
                "summary": "添加节点污点",
                "parameters": [
                    {
                        "description": "节点名称+污点",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.NodeTaint"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/operations/add/locktime": {
            "put": {
                "description": "set LockTime of the job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "set LockTime of the job",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/operations/auto": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "check job list and delete not using gpu job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Auto delete not using gpu job list",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "timeRange",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "util",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "waitTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/operations/clear/locktime": {
            "put": {
                "description": "clear LockTime of the job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "clear LockTime of the job",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/operations/cronjob": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all cronjob configs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Get all cronjob configs",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update one cronjob config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Update cronjob config",
                "parameters": [
                    {
                        "description": "CronjobConfigs",
                        "name": "use",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/operations.CronjobConfigs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/operations/keep/{name}": {
            "put": {
                "description": "set KeepWhenLowResourceUsage of the job to the opposite value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "set KeepWhenLowResourceUsage of the job to the opposite value",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/operations/waiting/jupyter": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "check pending jupyter jobs, delete if not scheduled",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Delete unscheduled jupyter jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "waitMinitues",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/operations/whitelist": {
            "get": {
                "description": "get job white list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Get job white list",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/projects": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "从请求中获取账户名称、描述和配额，以当前用户为管理员，创建一个团队账户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "创建团队账户",
                "parameters": [
                    {
                        "description": "账户信息",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功创建账户，返回账户ID",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_ProjectCreateResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "账户创建失败，返回错误信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/resources": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "If the vendorDomain parameter is provided, the API will return a list of resources that match the specified vendor domain.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "Get a list of resources based on the specified parameters",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor domain of the resource (For example: 'nvidia.com'\t)",
                        "name": "vendorDomain",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/resources/gpu/{gpuId}/networks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "This API will return all RDMA resources linked to the specified GPU resource.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Resource"
                ],
                "summary": "Get all RDMA resources linked to a GPU resource",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "GPU Resource ID",
                        "name": "gpuId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/spjobs/{name}/events": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取稀疏推荐作业关联的事件信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SpJob"
                ],
                "summary": "获取稀疏推荐作业的事件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "事件列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/token/verify": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "读取header的auth进行鉴权",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "通过token鉴权",
                "responses": {
                    "200": {
                        "description": "Token 鉴权",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_TokenReq"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/users/email/verified": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "检查邮箱是否已验证",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "检查邮箱是否已验证",
                "responses": {
                    "200": {
                        "description": "成功获取用户信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/users/{name}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取指定用户的详细信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "获取单个用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功获取用户信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_UserDetailResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the jobs of the user by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Get the jobs of the user",
                "responses": {
                    "200": {
                        "description": "Volcano Job List",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/all": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "返回指定天数内的所有作业，默认为14天",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Get all of the jobs",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 14,
                        "description": "Number of days to look back, default is 14",
                        "name": "days",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "admin get Volcano Job List",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "admin Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/jupyter": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a Jupyter job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Create a Jupyter job",
                "parameters": [
                    {
                        "description": "Create Jupyter Job Request",
                        "name": "CreateJupyterReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vcjob.CreateJupyterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/jupyter/{name}/snapshot": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create nerdctl docker commit to snapshot the jupyter notebook",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Create a snapshot of the jupyter notebook",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-vcjob_JobTokenResp"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/tensorflow": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a training job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Create a training job",
                "parameters": [
                    {
                        "description": "CreateTrainingReq",
                        "name": "CreateTrainingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/training": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a training job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Create a training job",
                "parameters": [
                    {
                        "description": "CreateTrainingReq",
                        "name": "CreateTrainingReq",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete the job by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Delete the job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/alert": {
            "put": {
                "description": "set AlertEnabled of the job to the opposite value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "set AlertEnabled of the job to the opposite value",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/detail": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "调用k8s get crd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "获取jupyter详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "任务描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/event": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取任务的事件",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "获取任务的事件",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/pods": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取任务的Pod列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "获取任务的Pod列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pod列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/ssh": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "开启 SSH",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "开启 SSH",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SSH开启成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/template": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取任务的 template",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "获取任务的 template",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/token": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the token of the job by logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Get the ingress base url and jupyter token of the job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "jobName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-vcjob_JobTokenResp"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/yaml": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "调用k8s get crd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vcjob-jupyter"
                ],
                "summary": "获取vcjob Yaml详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "任务yaml",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "crclient.ClusterNodeDetail": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "containerRuntimeVersion": {
                    "type": "string"
                },
                "gpuArch": {
                    "type": "string"
                },
                "gpuCount": {
                    "type": "integer"
                },
                "gpuMemory": {
                    "type": "string"
                },
                "isReady": {
                    "type": "string"
                },
                "kubeletVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "taint": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "crclient.GPUInfo": {
            "type": "object",
            "properties": {
                "cudaVersion": {
                    "type": "string"
                },
                "gpuArch": {
                    "type": "string"
                },
                "gpuCount": {
                    "type": "integer"
                },
                "gpuDriver": {
                    "type": "string"
                },
                "gpuMemory": {
                    "type": "string"
                },
                "gpuProduct": {
                    "type": "string"
                },
                "gpuUtil": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "haveGPU": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "relateJobs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "handler.AccountContext": {
            "type": "object",
            "properties": {
                "accessPublic": {
                    "description": "User access mode of the platform",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AccessMode"
                        }
                    ]
                },
                "accessQueue": {
                    "description": "User access mode of the queue",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.AccessMode"
                        }
                    ]
                },
                "queue": {
                    "description": "Current Queue Name",
                    "type": "string"
                },
                "rolePlatform": {
                    "description": "User role of the platform",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Role"
                        }
                    ]
                },
                "roleQueue": {
                    "description": "User role of the queue",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Role"
                        }
                    ]
                },
                "space": {
                    "description": "User pvc subpath the platform",
                    "type": "string"
                }
            }
        },
        "handler.AccountResp": {
            "type": "object",
            "properties": {
                "access": {
                    "$ref": "#/definitions/model.AccessMode"
                },
                "expiredAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.Role"
                }
            }
        },
        "handler.AuthMethod": {
            "type": "string",
            "enum": [
                "normal",
                "act-ldap",
                "act-api"
            ],
            "x-enum-varnames": [
                "AuthMethodNormal",
                "AuthMethodACTLDAP",
                "AuthMethodACTAPI"
            ]
        },
        "handler.DatasetReq": {
            "type": "object",
            "required": [
                "describe",
                "name",
                "url"
            ],
            "properties": {
                "describe": {
                    "type": "string"
                },
                "editable": {
                    "type": "boolean"
                },
                "ispublic": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "$ref": "#/definitions/model.DataType"
                },
                "url": {
                    "type": "string"
                },
                "weburl": {
                    "type": "string"
                }
            }
        },
        "handler.DeleteProjectResp": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "handler.FilePermission": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "_",
                "NotAllowed",
                "ReadOnly",
                "ReadWrite"
            ]
        },
        "handler.JobTemplateReq": {
            "type": "object",
            "required": [
                "name",
                "template"
            ],
            "properties": {
                "describe": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "handler.LinkResourceReq": {
            "type": "object",
            "required": [
                "rdmaId"
            ],
            "properties": {
                "rdmaId": {
                    "type": "integer"
                }
            }
        },
        "handler.LoginReq": {
            "type": "object",
            "required": [
                "auth"
            ],
            "properties": {
                "auth": {
                    "description": "[normal, act-ldap, act-api]",
                    "allOf": [
                        {
                            "$ref": "#/definitions/handler.AuthMethod"
                        }
                    ]
                },
                "password": {
                    "description": "(act-ldap, normal)",
                    "type": "string"
                },
                "token": {
                    "description": "(act-api)",
                    "type": "string"
                },
                "username": {
                    "description": "(act-ldap, normal)",
                    "type": "string"
                }
            }
        },
        "handler.LoginResp": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "context": {
                    "$ref": "#/definitions/handler.AccountContext"
                },
                "refreshToken": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/model.UserAttribute"
                }
            }
        },
        "handler.NodeTaint": {
            "type": "object",
            "required": [
                "name",
                "taint"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "taint": {
                    "type": "string"
                }
            }
        },
        "handler.ProjectCreateResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.SharedQueueReq": {
            "type": "object",
            "required": [
                "datasetID",
                "queueIDs"
            ],
            "properties": {
                "datasetID": {
                    "type": "integer"
                },
                "queueIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "handler.SharedUserReq": {
            "type": "object",
            "required": [
                "datasetID",
                "userIDs"
            ],
            "properties": {
                "datasetID": {
                    "type": "integer"
                },
                "userIDs": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "handler.SwitchQueueReq": {
            "type": "object",
            "required": [
                "queue"
            ],
            "properties": {
                "queue": {
                    "type": "string"
                }
            }
        },
        "handler.TokenReq": {
            "type": "object",
            "properties": {
                "permission": {
                    "$ref": "#/definitions/handler.FilePermission"
                },
                "rootPath": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.UpdateDatasetreq": {
            "type": "object",
            "required": [
                "datasetID",
                "describe",
                "name",
                "url"
            ],
            "properties": {
                "datasetID": {
                    "type": "integer"
                },
                "describe": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "url": {
                    "type": "string"
                },
                "weburl": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateJobTemplateReq": {
            "type": "object",
            "required": [
                "id",
                "name",
                "template"
            ],
            "properties": {
                "describe": {
                    "type": "string"
                },
                "document": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "handler.UpdateResourceReq": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/model.CraterResourceType"
                }
            }
        },
        "handler.UpdateRoleReq": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "$ref": "#/definitions/model.Role"
                }
            }
        },
        "handler.UserDetailResp": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "头像",
                    "type": "string"
                },
                "createdAt": {
                    "description": "创建时间",
                    "type": "string"
                },
                "group": {
                    "description": "课题组",
                    "type": "string"
                },
                "id": {
                    "description": "用户ID",
                    "type": "integer"
                },
                "name": {
                    "description": "用户名称",
                    "type": "string"
                },
                "nickname": {
                    "description": "用户昵称",
                    "type": "string"
                },
                "role": {
                    "description": "用户角色",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Role"
                        }
                    ]
                },
                "status": {
                    "description": "用户状态",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Status"
                        }
                    ]
                },
                "teacher": {
                    "description": "导师",
                    "type": "string"
                }
            }
        },
        "handler.cancelSharedQueueReq": {
            "type": "object",
            "required": [
                "datasetID",
                "queueID"
            ],
            "properties": {
                "datasetID": {
                    "type": "integer"
                },
                "queueID": {
                    "type": "integer"
                }
            }
        },
        "handler.cancelsharedUserReq": {
            "type": "object",
            "required": [
                "datasetID",
                "userID"
            ],
            "properties": {
                "datasetID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "image.ChangeImagePublicStatusRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "image.CreateByDockerfileRequest": {
            "type": "object",
            "properties": {
                "archs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "dockerfile": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "image.CreateByEnvdRequest": {
            "type": "object",
            "properties": {
                "base": {
                    "type": "string"
                },
                "buildSource": {
                    "$ref": "#/definitions/model.BuildSource"
                },
                "description": {
                    "type": "string"
                },
                "envd": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "python": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "image.CreateKanikoRequest": {
            "type": "object",
            "properties": {
                "archs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "packages": {
                    "type": "string"
                },
                "requirements": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template": {
                    "type": "string"
                }
            }
        },
        "image.UpdateProjectQuotaRequest": {
            "type": "object",
            "required": [
                "size"
            ],
            "properties": {
                "size": {
                    "type": "integer"
                }
            }
        },
        "image.UploadImageRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "imageLink": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "taskType": {
                    "$ref": "#/definitions/model.JobType"
                }
            }
        },
        "model.AccessMode": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4
            ],
            "x-enum-comments": {
                "AccessModeAO": "Append-only mode",
                "AccessModeNA": "Not-allowed mode",
                "AccessModeRO": "Read-only mode",
                "AccessModeRW": "Read-write mode"
            },
            "x-enum-varnames": [
                "_",
                "AccessModeNA",
                "AccessModeRO",
                "AccessModeRW",
                "AccessModeAO"
            ]
        },
        "model.BuildSource": {
            "type": "string",
            "enum": [
                "Dockerfile",
                "PipApt",
                "Snapshot",
                "EnvdAdvanced",
                "EnvdRaw"
            ],
            "x-enum-varnames": [
                "Dockerfile",
                "PipApt",
                "Snapshot",
                "EnvdAdvanced",
                "EnvdRaw"
            ]
        },
        "model.CraterResourceType": {
            "type": "string",
            "enum": [
                "gpu",
                "rdma"
            ],
            "x-enum-varnames": [
                "ResourceTypeGPU",
                "ResourceTypeRDMA"
            ]
        },
        "model.DataType": {
            "type": "string",
            "enum": [
                "dataset",
                "model",
                "sharefile"
            ],
            "x-enum-varnames": [
                "DataTypeDataset",
                "DataTypeModel",
                "DataTypeShareFile"
            ]
        },
        "model.JobType": {
            "type": "string",
            "enum": [
                "all",
                "jupyter",
                "webide",
                "pytorch",
                "tensorflow",
                "kuberay",
                "deepspeed",
                "openmpi",
                "custom"
            ],
            "x-enum-varnames": [
                "JobTypeAll",
                "JobTypeJupyter",
                "JobTypeWebIDE",
                "JobTypePytorch",
                "JobTypeTensorflow",
                "JobTypeKubeRay",
                "JobTypeDeepSpeed",
                "JobTypeOpenMPI",
                "JobTypeCustom"
            ]
        },
        "model.Role": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "_",
                "RoleGuest",
                "RoleUser",
                "RoleAdmin"
            ]
        },
        "model.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-comments": {
                "StatusActive": "Active status",
                "StatusInactive": "Inactive status",
                "StatusPending": "Pending status, not yet activated"
            },
            "x-enum-varnames": [
                "_",
                "StatusPending",
                "StatusActive",
                "StatusInactive"
            ]
        },
        "model.UserAttribute": {
            "type": "object",
            "properties": {
                "avatar": {
                    "description": "头像",
                    "type": "string"
                },
                "email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "expiredAt": {
                    "description": "过期时间",
                    "type": "string"
                },
                "gid": {
                    "description": "GID",
                    "type": "string"
                },
                "group": {
                    "description": "课题组",
                    "type": "string"
                },
                "id": {
                    "description": "ID",
                    "type": "integer"
                },
                "name": {
                    "description": "账号",
                    "type": "string"
                },
                "nickname": {
                    "description": "昵称，如果没有指定，则与账号相同",
                    "type": "string"
                },
                "phone": {
                    "description": "电话",
                    "type": "string"
                },
                "teacher": {
                    "description": "老师",
                    "type": "string"
                },
                "uid": {
                    "description": "UID and GID are used for Filesystem",
                    "type": "string"
                }
            }
        },
        "operations.CronjobConfigs": {
            "type": "object",
            "properties": {
                "configs": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "schedule": {
                    "type": "string"
                },
                "suspend": {
                    "type": "boolean"
                }
            }
        },
        "payload.Order": {
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ],
            "x-enum-varnames": [
                "Asc",
                "Desc"
            ]
        },
        "resputil.ErrorCode": {
            "type": "integer",
            "enum": [
                0,
                40001,
                40101,
                40102,
                40103,
                40104,
                40105,
                40106,
                40301,
                40302,
                40401,
                99999
            ],
            "x-enum-varnames": [
                "OK",
                "InvalidRequest",
                "TokenExpired",
                "TokenInvalid",
                "MustRegister",
                "RegisterTimeout",
                "RegisterNotFound",
                "InvalidCredentials",
                "UserNotAllowed",
                "UserEmailNotVerified",
                "ServiceSshdNotFound",
                "NotSpecified"
            ]
        },
        "resputil.Response-any": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-array_handler_AccountResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.AccountResp"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-crclient_ClusterNodeDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/crclient.ClusterNodeDetail"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-crclient_GPUInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/crclient.GPUInfo"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_DeleteProjectResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.DeleteProjectResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_LoginResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.LoginResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_ProjectCreateResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.ProjectCreateResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_TokenReq": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.TokenReq"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_UserDetailResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.UserDetailResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-string": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-tool_PodIngress": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/tool.PodIngress"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-tool_PodIngressResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/tool.PodIngressResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-tool_PodNodeport": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/tool.PodNodeport"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-tool_PodNodeportResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/tool.PodNodeportResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-vcjob_JobTokenResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/vcjob.JobTokenResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "tool.PodIngress": {
            "type": "object",
            "required": [
                "name",
                "port"
            ],
            "properties": {
                "name": {
                    "description": "Rule name",
                    "type": "string"
                },
                "port": {
                    "description": "Port to expose",
                    "type": "integer"
                },
                "prefix": {
                    "description": "Unique prefix for access",
                    "type": "string"
                }
            }
        },
        "tool.PodIngressMgr": {
            "type": "object",
            "required": [
                "name",
                "port"
            ],
            "properties": {
                "name": {
                    "description": "Rule name",
                    "type": "string"
                },
                "port": {
                    "description": "Port to expose",
                    "type": "integer"
                }
            }
        },
        "tool.PodIngressResp": {
            "type": "object",
            "properties": {
                "ingresses": {
                    "description": "List of ingress rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool.PodIngress"
                    }
                }
            }
        },
        "tool.PodNodeport": {
            "type": "object",
            "required": [
                "containerPort",
                "name",
                "nodePort"
            ],
            "properties": {
                "address": {
                    "description": "address for access",
                    "type": "string"
                },
                "containerPort": {
                    "description": "ContainPort to expose",
                    "type": "integer"
                },
                "name": {
                    "description": "Rule name",
                    "type": "string"
                },
                "nodePort": {
                    "description": "NodePort to expose",
                    "type": "integer"
                },
                "serviceName": {
                    "type": "string"
                }
            }
        },
        "tool.PodNodeportMgr": {
            "type": "object",
            "required": [
                "containerPort",
                "name"
            ],
            "properties": {
                "containerPort": {
                    "description": "ContatinerPort to expose",
                    "type": "integer"
                },
                "name": {
                    "description": "Rule name",
                    "type": "string"
                }
            }
        },
        "tool.PodNodeportResp": {
            "type": "object",
            "properties": {
                "nodeports": {
                    "description": "List of nodeport rules",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tool.PodNodeport"
                    }
                }
            }
        },
        "vcjob.CreateJupyterReq": {
            "type": "object"
        },
        "vcjob.DatasetMount": {
            "type": "object",
            "properties": {
                "datasetID": {
                    "type": "integer"
                },
                "mountPath": {
                    "type": "string"
                }
            }
        },
        "vcjob.JobTokenResp": {
            "type": "object",
            "properties": {
                "baseURL": {
                    "type": "string"
                },
                "fullURL": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "podName": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "vcjob.VolumeMount": {
            "type": "object",
            "properties": {
                "datasetID": {
                    "type": "integer"
                },
                "mountPath": {
                    "type": "string"
                },
                "subPath": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/vcjob.VolumeType"
                }
            }
        },
        "vcjob.VolumeType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "_",
                "FileType",
                "DataType"
            ]
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "访问 /login 并获取 TOKEN 后，填入 'Bearer ${TOKEN}' 以访问受保护的接口",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.3.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Crater API",
	Description:      "This is the API server for Crater, a Multi-tenant AI Model Training Platform based on Kubernetes.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
