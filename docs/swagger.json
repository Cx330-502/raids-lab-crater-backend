{
    "swagger": "2.0",
    "info": {
        "description": "This is the API server for Crater, a Multi-tenant AI Model Training Platform based on Kubernetes.",
        "title": "Crater API",
        "contact": {},
        "version": "0.3.0"
    },
    "paths": {
        "/images/available": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "用queueID来过滤已完成的镜像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "用户在运行作业时选择镜像需要调用此接口，来获取可以用的镜像",
                "responses": {}
            }
        },
        "/images/create": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取参数，生成变量，调用接口",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "创建ImagePack CRD和数据库entity",
                "parameters": [
                    {
                        "description": "创建ImagePack",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ImagePackCreateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/images/delete": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据ID更新ImagePack的状态为Deleted，起到删除的功能",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "根据ID删除ImagePack",
                "parameters": [
                    {
                        "description": "删除镜像的ID",
                        "name": "ID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/images/get": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取imagepackname，搜索到imagepack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取imagepack的详细信息，主要用于调试",
                "parameters": [
                    {
                        "type": "string",
                        "description": "获取ImagePack的name",
                        "name": "imagepackname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/images/list": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据GET参数type来决定搜索私有or公共镜像",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "管理员获取相关镜像的功能",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "管理员获取镜像的类型",
                        "name": "type",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/images/log": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取imagepackname，搜索到imagepack",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "获取imagepack的日志信息，展示在镜像详情页",
                "parameters": [
                    {
                        "type": "string",
                        "description": "获取ImagePack的name",
                        "name": "imagepackname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/images/params": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "接受参数，序列化为string，更新imagepack相应字段",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ImagePack"
                ],
                "summary": "用于更新镜像的Profile参数",
                "parameters": [
                    {
                        "description": "更新ImagePack的name",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ImagePackParamsUpdateRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/login": {
            "post": {
                "description": "校验用户身份，生成包含当前用户和项目的 JWT Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "description": "查询参数",
                        "name": "data",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/handler.LoginReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "登录成功，返回 JWT Token 和默认个人项目",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_LoginResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "401": {
                        "description": "用户名或密码错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "数据库交互错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/labels": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "创建标签",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "创建标签",
                "parameters": [
                    {
                        "description": "创建标签",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CreateLabelReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/labels/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新标签",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "更新标签",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新标签",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateLabelReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "根据ID删除标签",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "删除标签",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "获取所有项目的摘要信息，支持筛选条件、分页和排序",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取所有项目",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "是否为个人项目",
                        "name": "isPersonal",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "部分匹配项目名称",
                        "name": "nameLike",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "x-enum-varnames": [
                            "Asc",
                            "Desc"
                        ],
                        "description": "排序方式（升序、降序）",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "排序字段",
                        "name": "orderCol",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "第几页（从0开始）",
                        "name": "pageIndex",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "每页大小",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "项目状态（pending, active, inactive）",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "项目列表",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_ListAllResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/projects/{name}/quotas": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新配额",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "更新配额",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新quota",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateQuotaReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功更新配额",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/queues": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list all queues by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "list all queues",
                "responses": {
                    "200": {
                        "description": "Volcano queue list",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "列出用户信息（包含私人配额）",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "列出用户信息",
                "responses": {
                    "200": {
                        "description": "成功获取用户信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-array_handler_UserResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users/{name}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "删除用户",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "删除用户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "删除成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/users/{name}/role": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "更新角色",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "更新角色",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "role",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateRoleReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "更新角色成功",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/admin/vcjobs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all jobs  by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Get all of the jobs",
                "responses": {
                    "200": {
                        "description": "admin get Volcano Job List",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "admin Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/context/info": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user information from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Context"
                ],
                "summary": "Get user information",
                "responses": {
                    "200": {
                        "description": "user information",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_UserInfoResp"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/context/queue": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "query the queue information by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Context"
                ],
                "summary": "Get the queue information",
                "responses": {
                    "200": {
                        "description": "Volcano Queue Quota",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/labels": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "show all labels, decs by priority",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "label"
                ],
                "summary": "list labels",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-array_handler_LabelResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "kubectl + prometheus获取节点基本信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "获取节点基本信息",
                "responses": {
                    "200": {
                        "description": "成功返回值描述，注意这里返回Json字符串，swagger无法准确解析",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-string"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes/{name}/gpu/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "查询prometheus获取GPU各节点的利用率",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "获取GPU各节点的利用率",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-payload_GPUInfo"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/nodes/{name}/pod/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "kubectl + prometheus获取节点Pod信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Node"
                ],
                "summary": "获取节点Pod信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "节点名称",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-payload_ClusterNodePodInfo"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/projects": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "连接用户项目表和项目表，获取用户的所有项目的摘要信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "获取用户的所有项目",
                "responses": {
                    "200": {
                        "description": "成功返回值描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-array_payload_ProjectResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "从请求中获取项目名称、描述和配额，以当前用户为管理员，创建一个团队项目",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "创建团队项目",
                "parameters": [
                    {
                        "description": "项目信息",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ProjectCreateReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功创建项目，返回项目ID",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_ProjectCreateResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "项目创建失败，返回错误信息",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/queues": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "list user queues by user id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Queue"
                ],
                "summary": "list user queues",
                "responses": {
                    "200": {
                        "description": "User queue list",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-array_handler_UserQueueResp"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/switch": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "读取body中的项目ID，生成新的 JWT Token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "类似登录，切换项目并返回新的 JWT Token",
                "parameters": [
                    {
                        "description": "项目ID",
                        "name": "project_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.SwitchQueueReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "用户上下文",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_LoginResp"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/token/verify": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "读取header的auth进行鉴权",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "通过token鉴权",
                "responses": {
                    "200": {
                        "description": "Token 鉴权",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_TokenReq"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "其他错误",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the jobs of the user by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Get the jobs of the user",
                "responses": {
                    "200": {
                        "description": "Volcano Job List",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete the job by client-go",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Delete the job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/detail": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "调用k8s get crd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vcjob-jupyter"
                ],
                "summary": "获取jupyter详情",
                "parameters": [
                    {
                        "type": "string",
                        "description": "vcjob-name",
                        "name": "jobname",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "任务描述",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        },
        "/v1/vcjobs/{name}/token": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get the token of the job by logs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VolcanoJob"
                ],
                "summary": "Get the ingress base url and jupyter token of the job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Name",
                        "name": "jobName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-handler_JobIngressResp"
                        }
                    },
                    "400": {
                        "description": "Request parameter error",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    },
                    "500": {
                        "description": "Other errors",
                        "schema": {
                            "$ref": "#/definitions/resputil.Response-any"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.CreateLabelReq": {
            "type": "object",
            "required": [
                "name",
                "priority",
                "type"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.WorkerType"
                }
            }
        },
        "handler.FilePermission": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "_",
                "NotAllowed",
                "ReadOnly",
                "ReadWrite"
            ]
        },
        "handler.ImagePackCreateRequest": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "gitRepository": {
                    "type": "string"
                },
                "imageName": {
                    "type": "string"
                },
                "imageTag": {
                    "type": "string"
                },
                "needProfile": {
                    "type": "boolean"
                },
                "registryPass": {
                    "type": "string"
                },
                "registryProject": {
                    "type": "string"
                },
                "registryServer": {
                    "type": "string"
                },
                "registryUser": {
                    "type": "string"
                },
                "taskType": {
                    "$ref": "#/definitions/model.ImageTaskType"
                }
            }
        },
        "handler.ImagePackParamsUpdateRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.ImageProfileParams"
                },
                "imagepackname": {
                    "type": "string"
                }
            }
        },
        "handler.JobIngressResp": {
            "type": "object",
            "properties": {
                "baseURL": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.LabelResp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.WorkerType"
                }
            }
        },
        "handler.ListAllResp": {
            "type": "object"
        },
        "handler.LoginReq": {
            "type": "object",
            "required": [
                "auth",
                "password",
                "username"
            ],
            "properties": {
                "auth": {
                    "description": "认证方式 [normal, act]",
                    "type": "string"
                },
                "password": {
                    "description": "密码",
                    "type": "string"
                },
                "username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "handler.LoginResp": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "context": {
                    "$ref": "#/definitions/handler.UserContext"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "handler.ProjectCreateReq": {
            "type": "object",
            "required": [
                "description",
                "name",
                "quota"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "quota": {
                    "$ref": "#/definitions/handler.QuotaReq"
                }
            }
        },
        "handler.ProjectCreateResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "handler.QuotaReq": {
            "type": "object",
            "required": [
                "cpu",
                "gpu",
                "memory",
                "storage"
            ],
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "gpu": {
                    "type": "integer"
                },
                "memory": {
                    "type": "integer"
                },
                "storage": {
                    "type": "integer"
                }
            }
        },
        "handler.SwitchQueueReq": {
            "type": "object",
            "required": [
                "queue"
            ],
            "properties": {
                "queue": {
                    "type": "string"
                }
            }
        },
        "handler.TokenReq": {
            "type": "object",
            "properties": {
                "permission": {
                    "$ref": "#/definitions/handler.FilePermission"
                },
                "rootPath": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "handler.UpdateLabelReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/model.WorkerType"
                }
            }
        },
        "handler.UpdateQuotaReq": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "integer"
                },
                "cpuReq": {
                    "type": "integer"
                },
                "extra": {
                    "type": "string"
                },
                "gpu": {
                    "type": "integer"
                },
                "gpuMem": {
                    "type": "integer"
                },
                "gpuMemReq": {
                    "type": "integer"
                },
                "gpuReq": {
                    "type": "integer"
                },
                "job": {
                    "type": "integer"
                },
                "jobReq": {
                    "type": "integer"
                },
                "mem": {
                    "type": "integer"
                },
                "memReq": {
                    "type": "integer"
                },
                "node": {
                    "type": "integer"
                },
                "nodeReq": {
                    "type": "integer"
                },
                "storage": {
                    "type": "integer"
                }
            }
        },
        "handler.UpdateRoleReq": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "$ref": "#/definitions/model.Role"
                }
            }
        },
        "handler.UserContext": {
            "type": "object",
            "properties": {
                "queue": {
                    "description": "Current Queue Name",
                    "type": "string"
                },
                "rolePlatform": {
                    "description": "User role of the platform",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Role"
                        }
                    ]
                },
                "roleQueue": {
                    "description": "User role of the queue",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Role"
                        }
                    ]
                }
            }
        },
        "handler.UserInfoResp": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "handler.UserQueueResp": {
            "type": "object",
            "properties": {
                "access": {
                    "$ref": "#/definitions/model.AccessMode"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/model.Role"
                }
            }
        },
        "handler.UserResp": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "用户ID",
                    "type": "integer"
                },
                "name": {
                    "description": "用户名称",
                    "type": "string"
                },
                "role": {
                    "description": "用户角色",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Role"
                        }
                    ]
                },
                "status": {
                    "description": "用户状态",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Status"
                        }
                    ]
                }
            }
        },
        "model.AccessMode": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-comments": {
                "AccessModeAO": "Append-only mode",
                "AccessModeRO": "Read-only mode",
                "AccessModeRW": "Read-write mode"
            },
            "x-enum-varnames": [
                "_",
                "AccessModeRO",
                "AccessModeRW",
                "AccessModeAO"
            ]
        },
        "model.ImageProfileParams": {
            "type": "object",
            "properties": {
                "Activations": {
                    "type": "integer"
                },
                "BatchSize": {
                    "type": "integer"
                },
                "Convs": {
                    "type": "integer"
                },
                "Denses": {
                    "type": "integer"
                },
                "GFLOPs": {
                    "type": "number"
                },
                "GPUMemUsage": {
                    "type": "number"
                },
                "GPUUtil": {
                    "type": "number"
                },
                "ModelSize": {
                    "type": "number"
                },
                "Others": {
                    "type": "integer"
                },
                "Params": {
                    "type": "integer"
                }
            }
        },
        "model.ImageTaskType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "JupyterTask": "Jupyter交互式任务",
                "OffLineTask": "离线任务"
            },
            "x-enum-varnames": [
                "_",
                "OffLineTask",
                "JupyterTask"
            ]
        },
        "model.Role": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "_",
                "RoleGuest",
                "RoleUser",
                "RoleAdmin"
            ]
        },
        "model.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-comments": {
                "StatusActive": "Active status",
                "StatusInactive": "Inactive status",
                "StatusPending": "Pending status, not yet activated"
            },
            "x-enum-varnames": [
                "_",
                "StatusPending",
                "StatusActive",
                "StatusInactive"
            ]
        },
        "model.WorkerType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-comments": {
                "Nvidia": "Nvidia GPU worker",
                "Unknown": "Unknown worker"
            },
            "x-enum-varnames": [
                "_",
                "Nvidia",
                "Unknown"
            ]
        },
        "payload.ClusterNodePodInfo": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "containerRuntimeVersion": {
                    "type": "string"
                },
                "isReady": {
                    "type": "boolean"
                },
                "kubeletVersion": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "pods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payload.Pod"
                    }
                },
                "role": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "payload.GPUInfo": {
            "type": "object",
            "properties": {
                "gpuCount": {
                    "type": "integer"
                },
                "gpuUtil": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    }
                },
                "haveGPU": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "payload.Order": {
            "type": "string",
            "enum": [
                "asc",
                "desc"
            ],
            "x-enum-varnames": [
                "Asc",
                "Desc"
            ]
        },
        "payload.Pod": {
            "type": "object",
            "properties": {
                "CPU": {
                    "type": "number"
                },
                "IP": {
                    "type": "string"
                },
                "Mem": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "payload.ProjectResp": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "项目ID",
                    "type": "integer"
                },
                "isPersonal": {
                    "description": "是否为个人项目",
                    "type": "boolean"
                },
                "name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "role": {
                    "description": "用户在项目中的角色",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Role"
                        }
                    ]
                },
                "status": {
                    "description": "项目状态",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Status"
                        }
                    ]
                }
            }
        },
        "resputil.ErrorCode": {
            "type": "integer",
            "enum": [
                0,
                40001,
                40101,
                40102,
                40103,
                40301,
                40401,
                99999
            ],
            "x-enum-varnames": [
                "OK",
                "InvalidRequest",
                "TokenExpired",
                "UserNotFound",
                "InvalidToken",
                "InvalidRole",
                "QueueNotFound",
                "NotSpecified"
            ]
        },
        "resputil.Response-any": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-array_handler_LabelResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.LabelResp"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-array_handler_UserQueueResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.UserQueueResp"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-array_handler_UserResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.UserResp"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-array_payload_ProjectResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payload.ProjectResp"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_JobIngressResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.JobIngressResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_ListAllResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.ListAllResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_LoginResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.LoginResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_ProjectCreateResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.ProjectCreateResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_TokenReq": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.TokenReq"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-handler_UserInfoResp": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/handler.UserInfoResp"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-payload_ClusterNodePodInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/payload.ClusterNodePodInfo"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-payload_GPUInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "$ref": "#/definitions/payload.GPUInfo"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "resputil.Response-string": {
            "type": "object",
            "properties": {
                "code": {
                    "$ref": "#/definitions/resputil.ErrorCode"
                },
                "data": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "访问 /login 并获取 TOKEN 后，填入 'Bearer ${TOKEN}' 以访问受保护的接口",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}