definitions:
  handler.ListAllResp:
    type: object
  handler.LoginReq:
    properties:
      auth:
        description: 认证方式 [normal, act]
        type: string
      password:
        description: 密码
        type: string
      username:
        description: 用户名
        type: string
    required:
    - auth
    - password
    - username
    type: object
  handler.LoginResp:
    properties:
      accessToken:
        type: string
      context:
        $ref: '#/definitions/handler.PlatformContext'
      refreshToken:
        type: string
    type: object
  handler.PlatformContext:
    properties:
      platformRole:
        allOf:
        - $ref: '#/definitions/model.Role'
        description: User role of the platform
      projectID:
        description: Default Project ID
        type: integer
      projectRole:
        allOf:
        - $ref: '#/definitions/model.Role'
        description: User role of the project
    type: object
  handler.ProjectCreateReq:
    properties:
      description:
        type: string
      name:
        type: string
      quota:
        $ref: '#/definitions/handler.QuotaReq'
    required:
    - description
    - name
    - quota
    type: object
  handler.ProjectCreateResp:
    properties:
      id:
        type: integer
    type: object
  handler.QuotaReq:
    properties:
      cpu:
        type: integer
      gpu:
        type: integer
      memory:
        type: integer
      storage:
        type: integer
    required:
    - cpu
    - gpu
    - memory
    - storage
    type: object
  handler.SwitchProjectReq:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  handler.UpdateQuotaReq:
    properties:
      cpu:
        type: integer
      cpuReq:
        type: integer
      extra:
        type: string
      gpu:
        type: integer
      gpuMem:
        type: integer
      gpuMemReq:
        type: integer
      gpuReq:
        type: integer
      job:
        type: integer
      jobReq:
        type: integer
      mem:
        type: integer
      memReq:
        type: integer
      node:
        type: integer
      nodeReq:
        type: integer
      storage:
        description: 使用指针解决参数不能为0的问题
        type: integer
    type: object
  handler.UpdateRoleReq:
    properties:
      role:
        $ref: '#/definitions/model.Role'
    required:
    - role
    type: object
  handler.UserResp:
    properties:
      id:
        description: 用户ID
        type: integer
      name:
        description: 用户名称
        type: string
      quota:
        allOf:
        - $ref: '#/definitions/payload.Quota'
        description: |-
          ProjectID uint         `json:"projectID"` // 私人项目ID
          私人Quota，包含Job、Node等
      role:
        allOf:
        - $ref: '#/definitions/model.Role'
        description: 用户角色
      status:
        allOf:
        - $ref: '#/definitions/model.Status'
        description: 用户状态
    type: object
  model.Role:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - _
    - RoleGuest
    - RoleUser
    - RoleAdmin
  model.Status:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      StatusActive: Active status
      StatusInactive: Inactive status
      StatusPending: Pending status, not yet activated
    x-enum-varnames:
    - _
    - StatusPending
    - StatusActive
    - StatusInactive
  payload.Order:
    enum:
    - asc
    - desc
    type: string
    x-enum-varnames:
    - Asc
    - Desc
  payload.ProjectResp:
    properties:
      id:
        description: 项目ID
        type: integer
      isPersonal:
        description: 是否为个人项目
        type: boolean
      name:
        description: 项目名称
        type: string
      role:
        allOf:
        - $ref: '#/definitions/model.Role'
        description: 用户在项目中的角色
      status:
        allOf:
        - $ref: '#/definitions/model.Status'
        description: 项目状态
    type: object
  payload.Quota:
    properties:
      cpu:
        type: integer
      cpuReq:
        type: integer
      extra:
        type: string
      gpu:
        type: integer
      gpuMem:
        type: integer
      gpuMemReq:
        type: integer
      gpuReq:
        type: integer
      job:
        type: integer
      jobReq:
        type: integer
      mem:
        type: integer
      memReq:
        type: integer
      node:
        type: integer
      nodeReq:
        type: integer
      storage:
        type: integer
    type: object
  response.ErrorCode:
    enum:
    - 0
    - 40001
    - 40101
    - 40102
    - 40103
    - 40301
    - 99999
    type: integer
    x-enum-varnames:
    - OK
    - InvalidRequest
    - TokenExpired
    - UserNotFound
    - InvalidToken
    - InvalidRole
    - NotSpecified
  response.Response-any:
    properties:
      code:
        $ref: '#/definitions/response.ErrorCode'
      data: {}
      msg:
        type: string
    type: object
  response.Response-array_handler_UserResp:
    properties:
      code:
        $ref: '#/definitions/response.ErrorCode'
      data:
        items:
          $ref: '#/definitions/handler.UserResp'
        type: array
      msg:
        type: string
    type: object
  response.Response-array_payload_ProjectResp:
    properties:
      code:
        $ref: '#/definitions/response.ErrorCode'
      data:
        items:
          $ref: '#/definitions/payload.ProjectResp'
        type: array
      msg:
        type: string
    type: object
  response.Response-handler_ListAllResp:
    properties:
      code:
        $ref: '#/definitions/response.ErrorCode'
      data:
        $ref: '#/definitions/handler.ListAllResp'
      msg:
        type: string
    type: object
  response.Response-handler_LoginResp:
    properties:
      code:
        $ref: '#/definitions/response.ErrorCode'
      data:
        $ref: '#/definitions/handler.LoginResp'
      msg:
        type: string
    type: object
  response.Response-handler_ProjectCreateResp:
    properties:
      code:
        $ref: '#/definitions/response.ErrorCode'
      data:
        $ref: '#/definitions/handler.ProjectCreateResp'
      msg:
        type: string
    type: object
  response.Response-string:
    properties:
      code:
        $ref: '#/definitions/response.ErrorCode'
      data:
        type: string
      msg:
        type: string
    type: object
info:
  contact: {}
  description: This is the API server for Crater, a Multi-tenant AI Model Training
    Platform based on Kubernetes.
  title: Crater API
  version: 0.3.0
paths:
  /login:
    post:
      consumes:
      - application/json
      description: 校验用户身份，生成包含当前用户和项目的 JWT Token
      parameters:
      - description: 查询参数
        in: body
        name: data
        schema:
          $ref: '#/definitions/handler.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回 JWT Token 和默认个人项目
          schema:
            $ref: '#/definitions/response.Response-handler_LoginResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 数据库交互错误
          schema:
            $ref: '#/definitions/response.Response-any'
      summary: 用户登录
      tags:
      - Auth
  /v1/admin/projects:
    get:
      consumes:
      - application/json
      description: 获取所有项目的摘要信息，支持筛选条件、分页和排序
      parameters:
      - description: 筛选、排序参数
        in: query
        name: is_personal
        type: boolean
      - in: query
        name: name_like
        type: string
      - enum:
        - asc
        - desc
        in: query
        name: order
        type: string
        x-enum-varnames:
        - Asc
        - Desc
      - in: query
        name: order_col
        type: string
      - description: 分页参数
        in: query
        name: page_index
        required: true
        type: integer
      - in: query
        name: page_size
        required: true
        type: integer
      - description: Status is a uint8 type
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 项目列表
          schema:
            $ref: '#/definitions/response.Response-handler_ListAllResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 获取所有项目
      tags:
      - Project
  /v1/admin/users:
    get:
      consumes:
      - application/json
      description: 列出用户信息（包含私人配额）
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户信息
          schema:
            $ref: '#/definitions/response.Response-array_handler_UserResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 列出用户信息
      tags:
      - User
  /v1/admin/users/{name}:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: username
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/response.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 删除用户
      tags:
      - User
  /v1/admin/users/{name}/quotas:
    put:
      consumes:
      - application/json
      description: 更新配额
      parameters:
      - description: username
        in: path
        name: name
        required: true
        type: string
      - description: 更新quota
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateQuotaReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功更新配额
          schema:
            $ref: '#/definitions/response.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 更新配额
      tags:
      - User
  /v1/admin/users/{name}/role:
    put:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - description: username
        in: path
        name: name
        required: true
        type: string
      - description: role
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色成功
          schema:
            $ref: '#/definitions/response.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 更新角色
      tags:
      - User
  /v1/aijobs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an AI job by its unique identifier.
      parameters:
      - description: AI job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: Delete an AIJob by ID
      tags:
      - AIJob
  /v1/projects:
    get:
      consumes:
      - application/json
      description: 连接用户项目表和项目表，获取用户的所有项目的摘要信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/response.Response-array_payload_ProjectResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 获取用户的所有项目
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: 从请求中获取项目名称、描述和配额，以当前用户为管理员，创建一个团队项目
      parameters:
      - description: 项目信息
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.ProjectCreateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建项目，返回项目ID
          schema:
            $ref: '#/definitions/response.Response-handler_ProjectCreateResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 项目创建失败，返回错误信息
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 创建团队项目
      tags:
      - Project
  /v1/switch:
    post:
      consumes:
      - application/json
      description: 读取body中的项目ID，生成新的 JWT Token
      parameters:
      - description: 项目ID
        in: body
        name: project_id
        required: true
        schema:
          $ref: '#/definitions/handler.SwitchProjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: 用户上下文
          schema:
            $ref: '#/definitions/response.Response-handler_LoginResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/response.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/response.Response-any'
      security:
      - Bearer: []
      summary: 类似登录，切换项目并返回新的 JWT Token
      tags:
      - Auth
securityDefinitions:
  Bearer:
    description: 访问 /login 并获取 TOKEN 后，填入 'Bearer ${TOKEN}' 以访问受保护的接口
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
