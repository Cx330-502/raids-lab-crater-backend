definitions:
  crclient.ClusterNodeDetail:
    properties:
      address:
        type: string
      arch:
        type: string
      containerRuntimeVersion:
        type: string
      gpuArch:
        type: string
      gpuCount:
        type: integer
      gpuMemory:
        type: string
      isReady:
        type: string
      kubeletVersion:
        type: string
      name:
        type: string
      os:
        type: string
      osVersion:
        type: string
      role:
        type: string
      taint:
        type: string
      time:
        type: string
    type: object
  crclient.GPUInfo:
    properties:
      cudaVersion:
        type: string
      gpuArch:
        type: string
      gpuCount:
        type: integer
      gpuDriver:
        type: string
      gpuMemory:
        type: string
      gpuProduct:
        type: string
      gpuUtil:
        additionalProperties:
          type: number
        type: object
      haveGPU:
        type: boolean
      name:
        type: string
      relateJobs:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
    type: object
  handler.AccountContext:
    properties:
      accessPublic:
        allOf:
        - $ref: '#/definitions/model.AccessMode'
        description: User access mode of the platform
      accessQueue:
        allOf:
        - $ref: '#/definitions/model.AccessMode'
        description: User access mode of the queue
      queue:
        description: Current Queue Name
        type: string
      rolePlatform:
        allOf:
        - $ref: '#/definitions/model.Role'
        description: User role of the platform
      roleQueue:
        allOf:
        - $ref: '#/definitions/model.Role'
        description: User role of the queue
      space:
        description: User pvc subpath the platform
        type: string
    type: object
  handler.AccountResp:
    properties:
      access:
        $ref: '#/definitions/model.AccessMode'
      expiredAt:
        type: string
      name:
        type: string
      nickname:
        type: string
      role:
        $ref: '#/definitions/model.Role'
    type: object
  handler.AuthMethod:
    enum:
    - normal
    - act-ldap
    - act-api
    type: string
    x-enum-varnames:
    - AuthMethodNormal
    - AuthMethodACTLDAP
    - AuthMethodACTAPI
  handler.DatasetReq:
    properties:
      describe:
        type: string
      editable:
        type: boolean
      ispublic:
        type: boolean
      name:
        type: string
      tags:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/model.DataType'
      url:
        type: string
      weburl:
        type: string
    required:
    - describe
    - name
    - url
    type: object
  handler.DeleteProjectResp:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  handler.FilePermission:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - _
    - NotAllowed
    - ReadOnly
    - ReadWrite
  handler.JobTemplateReq:
    properties:
      describe:
        type: string
      document:
        type: string
      name:
        type: string
      template:
        type: string
    required:
    - name
    - template
    type: object
  handler.LinkResourceReq:
    properties:
      rdmaId:
        type: integer
    required:
    - rdmaId
    type: object
  handler.LoginReq:
    properties:
      auth:
        allOf:
        - $ref: '#/definitions/handler.AuthMethod'
        description: '[normal, act-ldap, act-api]'
      password:
        description: (act-ldap, normal)
        type: string
      token:
        description: (act-api)
        type: string
      username:
        description: (act-ldap, normal)
        type: string
    required:
    - auth
    type: object
  handler.LoginResp:
    properties:
      accessToken:
        type: string
      context:
        $ref: '#/definitions/handler.AccountContext'
      refreshToken:
        type: string
      user:
        $ref: '#/definitions/model.UserAttribute'
    type: object
  handler.NodeTaint:
    properties:
      name:
        type: string
      taint:
        type: string
    required:
    - name
    - taint
    type: object
  handler.ProjectCreateResp:
    properties:
      id:
        type: integer
    type: object
  handler.SharedQueueReq:
    properties:
      datasetID:
        type: integer
      queueIDs:
        items:
          type: integer
        type: array
    required:
    - datasetID
    - queueIDs
    type: object
  handler.SharedUserReq:
    properties:
      datasetID:
        type: integer
      userIDs:
        items:
          type: integer
        type: array
    required:
    - datasetID
    - userIDs
    type: object
  handler.SwitchQueueReq:
    properties:
      queue:
        type: string
    required:
    - queue
    type: object
  handler.TokenReq:
    properties:
      permission:
        $ref: '#/definitions/handler.FilePermission'
      rootPath:
        type: string
      userId:
        type: integer
    type: object
  handler.UpdateDatasetreq:
    properties:
      datasetID:
        type: integer
      describe:
        type: string
      name:
        type: string
      tags:
        items:
          type: string
        type: array
      url:
        type: string
      weburl:
        type: string
    required:
    - datasetID
    - describe
    - name
    - url
    type: object
  handler.UpdateJobTemplateReq:
    properties:
      describe:
        type: string
      document:
        type: string
      id:
        type: integer
      name:
        type: string
      template:
        type: string
    required:
    - id
    - name
    - template
    type: object
  handler.UpdateResourceReq:
    properties:
      label:
        type: string
      type:
        $ref: '#/definitions/model.CraterResourceType'
    type: object
  handler.UpdateRoleReq:
    properties:
      role:
        $ref: '#/definitions/model.Role'
    required:
    - role
    type: object
  handler.UserDetailResp:
    properties:
      avatar:
        description: 头像
        type: string
      createdAt:
        description: 创建时间
        type: string
      group:
        description: 课题组
        type: string
      id:
        description: 用户ID
        type: integer
      name:
        description: 用户名称
        type: string
      nickname:
        description: 用户昵称
        type: string
      role:
        allOf:
        - $ref: '#/definitions/model.Role'
        description: 用户角色
      status:
        allOf:
        - $ref: '#/definitions/model.Status'
        description: 用户状态
      teacher:
        description: 导师
        type: string
    type: object
  handler.cancelSharedQueueReq:
    properties:
      datasetID:
        type: integer
      queueID:
        type: integer
    required:
    - datasetID
    - queueID
    type: object
  handler.cancelsharedUserReq:
    properties:
      datasetID:
        type: integer
      userID:
        type: integer
    required:
    - datasetID
    - userID
    type: object
  image.ChangeImagePublicStatusRequest:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
  image.CreateByDockerfileRequest:
    properties:
      archs:
        items:
          type: string
        type: array
      description:
        type: string
      dockerfile:
        type: string
      name:
        type: string
      tag:
        type: string
      tags:
        items:
          type: string
        type: array
      template:
        type: string
    type: object
  image.CreateByEnvdRequest:
    properties:
      base:
        type: string
      buildSource:
        $ref: '#/definitions/model.BuildSource'
      description:
        type: string
      envd:
        type: string
      name:
        type: string
      python:
        type: string
      tag:
        type: string
      tags:
        items:
          type: string
        type: array
      template:
        type: string
    type: object
  image.CreateKanikoRequest:
    properties:
      archs:
        items:
          type: string
        type: array
      description:
        type: string
      image:
        type: string
      name:
        type: string
      packages:
        type: string
      requirements:
        type: string
      tag:
        type: string
      tags:
        items:
          type: string
        type: array
      template:
        type: string
    type: object
  image.UpdateProjectQuotaRequest:
    properties:
      size:
        type: integer
    required:
    - size
    type: object
  image.UploadImageRequest:
    properties:
      description:
        type: string
      imageLink:
        type: string
      tags:
        items:
          type: string
        type: array
      taskType:
        $ref: '#/definitions/model.JobType'
    type: object
  model.AccessMode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      AccessModeAO: Append-only mode
      AccessModeNA: Not-allowed mode
      AccessModeRO: Read-only mode
      AccessModeRW: Read-write mode
    x-enum-varnames:
    - _
    - AccessModeNA
    - AccessModeRO
    - AccessModeRW
    - AccessModeAO
  model.BuildSource:
    enum:
    - Dockerfile
    - PipApt
    - Snapshot
    - EnvdAdvanced
    - EnvdRaw
    type: string
    x-enum-varnames:
    - Dockerfile
    - PipApt
    - Snapshot
    - EnvdAdvanced
    - EnvdRaw
  model.CraterResourceType:
    enum:
    - gpu
    - rdma
    type: string
    x-enum-varnames:
    - ResourceTypeGPU
    - ResourceTypeRDMA
  model.DataType:
    enum:
    - dataset
    - model
    - sharefile
    type: string
    x-enum-varnames:
    - DataTypeDataset
    - DataTypeModel
    - DataTypeShareFile
  model.JobType:
    enum:
    - all
    - jupyter
    - webide
    - pytorch
    - tensorflow
    - kuberay
    - deepspeed
    - openmpi
    - custom
    type: string
    x-enum-varnames:
    - JobTypeAll
    - JobTypeJupyter
    - JobTypeWebIDE
    - JobTypePytorch
    - JobTypeTensorflow
    - JobTypeKubeRay
    - JobTypeDeepSpeed
    - JobTypeOpenMPI
    - JobTypeCustom
  model.Role:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - _
    - RoleGuest
    - RoleUser
    - RoleAdmin
  model.Status:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-comments:
      StatusActive: Active status
      StatusInactive: Inactive status
      StatusPending: Pending status, not yet activated
    x-enum-varnames:
    - _
    - StatusPending
    - StatusActive
    - StatusInactive
  model.UserAttribute:
    properties:
      avatar:
        description: 头像
        type: string
      email:
        description: 邮箱
        type: string
      expiredAt:
        description: 过期时间
        type: string
      gid:
        description: GID
        type: string
      group:
        description: 课题组
        type: string
      id:
        description: ID
        type: integer
      name:
        description: 账号
        type: string
      nickname:
        description: 昵称，如果没有指定，则与账号相同
        type: string
      phone:
        description: 电话
        type: string
      teacher:
        description: 老师
        type: string
      uid:
        description: UID and GID are used for Filesystem
        type: string
    type: object
  operations.CronjobConfigs:
    properties:
      configs:
        additionalProperties:
          type: string
        type: object
      name:
        type: string
      schedule:
        type: string
      suspend:
        type: boolean
    type: object
  payload.Order:
    enum:
    - asc
    - desc
    type: string
    x-enum-varnames:
    - Asc
    - Desc
  resputil.ErrorCode:
    enum:
    - 0
    - 40001
    - 40101
    - 40102
    - 40103
    - 40104
    - 40105
    - 40106
    - 40301
    - 40302
    - 40401
    - 99999
    type: integer
    x-enum-varnames:
    - OK
    - InvalidRequest
    - TokenExpired
    - TokenInvalid
    - MustRegister
    - RegisterTimeout
    - RegisterNotFound
    - InvalidCredentials
    - UserNotAllowed
    - UserEmailNotVerified
    - ServiceSshdNotFound
    - NotSpecified
  resputil.Response-any:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data: {}
      msg:
        type: string
    type: object
  resputil.Response-array_handler_AccountResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        items:
          $ref: '#/definitions/handler.AccountResp'
        type: array
      msg:
        type: string
    type: object
  resputil.Response-crclient_ClusterNodeDetail:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/crclient.ClusterNodeDetail'
      msg:
        type: string
    type: object
  resputil.Response-crclient_GPUInfo:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/crclient.GPUInfo'
      msg:
        type: string
    type: object
  resputil.Response-handler_DeleteProjectResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/handler.DeleteProjectResp'
      msg:
        type: string
    type: object
  resputil.Response-handler_LoginResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/handler.LoginResp'
      msg:
        type: string
    type: object
  resputil.Response-handler_ProjectCreateResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/handler.ProjectCreateResp'
      msg:
        type: string
    type: object
  resputil.Response-handler_TokenReq:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/handler.TokenReq'
      msg:
        type: string
    type: object
  resputil.Response-handler_UserDetailResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/handler.UserDetailResp'
      msg:
        type: string
    type: object
  resputil.Response-string:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        type: string
      msg:
        type: string
    type: object
  resputil.Response-tool_PodIngress:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/tool.PodIngress'
      msg:
        type: string
    type: object
  resputil.Response-tool_PodIngressResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/tool.PodIngressResp'
      msg:
        type: string
    type: object
  resputil.Response-tool_PodNodeport:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/tool.PodNodeport'
      msg:
        type: string
    type: object
  resputil.Response-tool_PodNodeportResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/tool.PodNodeportResp'
      msg:
        type: string
    type: object
  resputil.Response-vcjob_JobTokenResp:
    properties:
      code:
        $ref: '#/definitions/resputil.ErrorCode'
      data:
        $ref: '#/definitions/vcjob.JobTokenResp'
      msg:
        type: string
    type: object
  tool.PodIngress:
    properties:
      name:
        description: Rule name
        type: string
      port:
        description: Port to expose
        type: integer
      prefix:
        description: Unique prefix for access
        type: string
    required:
    - name
    - port
    type: object
  tool.PodIngressMgr:
    properties:
      name:
        description: Rule name
        type: string
      port:
        description: Port to expose
        type: integer
    required:
    - name
    - port
    type: object
  tool.PodIngressResp:
    properties:
      ingresses:
        description: List of ingress rules
        items:
          $ref: '#/definitions/tool.PodIngress'
        type: array
    type: object
  tool.PodNodeport:
    properties:
      address:
        description: address for access
        type: string
      containerPort:
        description: ContainPort to expose
        type: integer
      name:
        description: Rule name
        type: string
      nodePort:
        description: NodePort to expose
        type: integer
      serviceName:
        type: string
    required:
    - containerPort
    - name
    - nodePort
    type: object
  tool.PodNodeportMgr:
    properties:
      containerPort:
        description: ContatinerPort to expose
        type: integer
      name:
        description: Rule name
        type: string
    required:
    - containerPort
    - name
    type: object
  tool.PodNodeportResp:
    properties:
      nodeports:
        description: List of nodeport rules
        items:
          $ref: '#/definitions/tool.PodNodeport'
        type: array
    type: object
  vcjob.CreateJupyterReq:
    type: object
  vcjob.DatasetMount:
    properties:
      datasetID:
        type: integer
      mountPath:
        type: string
    type: object
  vcjob.JobTokenResp:
    properties:
      baseURL:
        type: string
      fullURL:
        type: string
      namespace:
        type: string
      podName:
        type: string
      token:
        type: string
    type: object
  vcjob.VolumeMount:
    properties:
      datasetID:
        type: integer
      mountPath:
        type: string
      subPath:
        type: string
      type:
        $ref: '#/definitions/vcjob.VolumeType'
    type: object
  vcjob.VolumeType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - _
    - FileType
    - DataType
info:
  contact: {}
  description: This is the API server for Crater, a Multi-tenant AI Model Training
    Platform based on Kubernetes.
  title: Crater API
  version: 0.3.0
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: 校验用户身份，生成包含当前用户和项目的 JWT Token
      parameters:
      - description: 查询参数
        in: body
        name: data
        schema:
          $ref: '#/definitions/handler.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功，返回 JWT Token 和默认个人项目
          schema:
            $ref: '#/definitions/resputil.Response-handler_LoginResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 数据库交互错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: 用户登录
      tags:
      - Auth
  /auth/mode:
    get:
      consumes:
      - application/json
      description: 返回后端部署的config值
      produces:
      - application/json
      responses:
        "200":
          description: 启用认证类型
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 获取相关配置时错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: 获取后端用户认证模式
      tags:
      - Auth
  /metrics:
    get:
      consumes:
      - application/json
      description: 返回Prometheus能够识别的信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回
          schema:
            items:
              $ref: '#/definitions/resputil.Response-any'
            type: array
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取系统中每种Status的Job的数量
      tags:
      - Metrics
  /v1/accounts:
    get:
      consumes:
      - application/json
      description: 连接用户账户表和账户表，获取用户的所有账户的摘要信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-array_handler_AccountResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取用户的所有账户
      tags:
      - Project
  /v1/accounts/{name}:
    get:
      consumes:
      - application/json
      description: 根据账户名称获取账户的信息
      parameters:
      - in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 账户信息
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取指定账户
      tags:
      - Project
  /v1/admin/accounts/{aid}:
    get:
      consumes:
      - application/json
      description: 根据账户ID获取账户的信息
      parameters:
      - in: path
        name: aid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 账户信息
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取指定账户
      tags:
      - Project
  /v1/admin/dataset/alldataset:
    get:
      consumes:
      - application/json
      description: 获取所有数据集
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取所有数据集
      tags:
      - Dataset
  /v1/admin/dataset/cancelshare/queue:
    post:
      consumes:
      - application/json
      description: 管理员取消数据共享队列
      parameters:
      - description: 共享数据集队列
        in: body
        name: queueReq
        required: true
        schema:
          $ref: '#/definitions/handler.cancelSharedQueueReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 管理员取消数据共享队列
      tags:
      - Dataset
  /v1/admin/dataset/cancelshare/user:
    post:
      consumes:
      - application/json
      description: 管理员取消数据集共享用户
      parameters:
      - description: 共享数据集用户
        in: body
        name: Req
        required: true
        schema:
          $ref: '#/definitions/handler.cancelsharedUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 管理员取消数据集共享用户
      tags:
      - Dataset
  /v1/admin/dataset/share/queue:
    post:
      consumes:
      - application/json
      description: 管理员对队列分享数据集
      parameters:
      - description: 共享数据集队列
        in: body
        name: queueReq
        required: true
        schema:
          $ref: '#/definitions/handler.SharedQueueReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 管理员对队列分享数据集
      tags:
      - Dataset
  /v1/admin/dataset/share/user:
    post:
      consumes:
      - application/json
      description: 管理员对用户分享数据集
      parameters:
      - description: 共享数据集用户
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/handler.SharedUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 管理员对用户分享数据集
      tags:
      - Dataset
  /v1/admin/images/deletekaniko:
    post:
      consumes:
      - application/json
      description: 管理员模式下遍历列表，根据ID更新Kaniko的状态为Deleted，起到删除的功能
      parameters:
      - description: 删除kaniko的IDList
        in: body
        name: IDList
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员模式下根据IDList删除Kaniko entity
      tags:
      - ImagePack
  /v1/admin/images/description:
    post:
      consumes:
      - application/json
      description: 更新描述
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员模式下更新镜像的描述
      tags:
      - ImagePack
  /v1/admin/images/image:
    get:
      consumes:
      - application/json
      description: 所有的镜像数据
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员获取所有镜像数据
      tags:
      - ImagePack
  /v1/admin/images/kaniko:
    get:
      consumes:
      - application/json
      description: 管理员获取所有镜像制作信息
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员获取相关镜像的功能
      tags:
      - ImagePack
    post:
      consumes:
      - application/json
      description: 获取参数，生成变量，调用接口
      parameters:
      - description: 创建ImagePack
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/image.CreateKanikoRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 创建ImagePack CRD和数据库kaniko entity
      tags:
      - ImagePack
  /v1/admin/images/tags:
    post:
      consumes:
      - application/json
      description: 管理员更新标签
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员更新镜像的标签
      tags:
      - ImagePack
  /v1/admin/images/type:
    post:
      consumes:
      - application/json
      description: 更新任务类型
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员更新镜像的任务类型
      tags:
      - ImagePack
  /v1/admin/operations/cleanup:
    delete:
      consumes:
      - application/json
      description: Delete batch jobs older than 4 days and interactive jobs older
        than 1 day
      parameters:
      - in: query
        name: batchDays
        type: integer
      - in: query
        name: interactiveDays
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Cleanup jobs based on type and duration
      tags:
      - Operations
  /v1/admin/projects:
    get:
      consumes:
      - application/json
      description: 获取所有账户的摘要信息，支持筛选条件、分页和排序
      parameters:
      - description: 部分匹配账户名称
        in: query
        name: nameLike
        type: string
      - description: 排序方式（升序、降序）
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
        x-enum-varnames:
        - Asc
        - Desc
      - description: 排序字段
        in: query
        name: orderCol
        type: string
      - description: 第几页（从0开始）
        in: query
        name: pageIndex
        required: true
        type: integer
      - description: 每页大小
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 账户列表
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取所有账户
      tags:
      - Project
  /v1/admin/projects/{aid}:
    delete:
      consumes:
      - application/json
      description: 删除账户record和队列crd
      parameters:
      - in: path
        name: aid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除的队列名
          schema:
            $ref: '#/definitions/resputil.Response-handler_DeleteProjectResp'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除账户
      tags:
      - Project
    put:
      consumes:
      - application/json
      description: 更新配额
      parameters:
      - in: path
        name: aid
        required: true
        type: integer
      - description: 更新quota
        in: body
        name: data
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功更新配额
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 更新配额
      tags:
      - Project
  /v1/admin/projects/add/{aid}/{uid}:
    post:
      consumes:
      - application/json
      description: 创建一个userproject
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: integer
      - description: aid
        in: path
        name: aid
        required: true
        type: integer
      - description: 权限角色
        in: body
        name: req
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 返回添加的用户名和队列名
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 向账户中添加用户
      tags:
      - Project
  /v1/admin/projects/update/{aid}/{uid}:
    delete:
      consumes:
      - application/json
      description: 删除对应userQueue条目
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: integer
      - description: aid
        in: path
        name: aid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 返回添加的用户名和队列名
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除账户用户
      tags:
      - Project
    post:
      consumes:
      - application/json
      description: 创建一个userQueue条目
      parameters:
      - description: uid
        in: path
        name: uid
        required: true
        type: integer
      - description: aid
        in: path
        name: aid
        required: true
        type: integer
      - description: 权限角色
        in: body
        name: req
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 返回添加的用户名和队列名
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 更新账户用户
      tags:
      - Project
  /v1/admin/projects/userIn/{aid}:
    get:
      consumes:
      - application/json
      description: sql查询-join
      parameters:
      - description: aid
        in: path
        name: aid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: userQueue条目
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取账户下的用户
      tags:
      - Project
  /v1/admin/projects/userOutOf/{aid}:
    get:
      consumes:
      - application/json
      description: sql查询-subquery
      parameters:
      - description: aid
        in: path
        name: aid
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: userQueue条目
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取账户外的用户
      tags:
      - Project
  /v1/admin/resources/{id}:
    delete:
      consumes:
      - application/json
      description: This API will delete a resource based on the specified ID.
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Delete a resource
      tags:
      - Resource
    put:
      consumes:
      - application/json
      description: This API will update the label or type of a resource based on the
        specified ID.
      parameters:
      - description: Resource ID
        in: path
        name: id
        required: true
        type: integer
      - description: Resource attributes to update
        in: body
        name: resource
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateResourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Update a resource's attributes
      tags:
      - Resource
  /v1/admin/resources/{id}/networks/{networkId}:
    delete:
      consumes:
      - application/json
      description: This API will delete the link between a GPU resource and an RDMA
        resource based on the specified IDs.
      parameters:
      - description: GPU Resource ID
        in: path
        name: id
        required: true
        type: integer
      - description: RDMA Resource ID
        in: path
        name: networkId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Delete the link between a GPU resource and an RDMA resource
      tags:
      - Resource
  /v1/admin/resources/link:
    post:
      consumes:
      - application/json
      description: This API will create a relationship between a GPU resource and
        an RDMA resource.
      parameters:
      - description: GPU and RDMA IDs to link
        in: body
        name: linkRequest
        required: true
        schema:
          $ref: '#/definitions/handler.LinkResourceReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Link a GPU resource to an RDMA resource
      tags:
      - Resource
  /v1/admin/resources/sync:
    post:
      consumes:
      - application/json
      description: This API will get the allocatable resources from the Kubernetes
        cluster and update the database with the latest information.
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get allocatable resources from the Kubernetes cluster and update the
        database
      tags:
      - Resource
  /v1/admin/users:
    get:
      consumes:
      - application/json
      description: 列出用户信息（包含私人配额）
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户信息
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 列出用户信息
      tags:
      - User
  /v1/admin/users/{name}:
    delete:
      consumes:
      - application/json
      description: 删除用户
      parameters:
      - description: username
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除用户
      tags:
      - User
  /v1/admin/users/{name}/attributes:
    put:
      consumes:
      - application/json
      description: 管理员更新指定用户的属性
      parameters:
      - description: username
        in: path
        name: name
        required: true
        type: string
      - description: 用户属性
        in: body
        name: attributes
        required: true
        schema:
          $ref: '#/definitions/model.UserAttribute'
      produces:
      - application/json
      responses:
        "200":
          description: 用户属性更新成功
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 管理员更新用户属性
      tags:
      - User
  /v1/admin/users/{name}/role:
    put:
      consumes:
      - application/json
      description: 更新角色
      parameters:
      - in: path
        name: name
        required: true
        type: string
      - description: role
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateRoleReq'
      produces:
      - application/json
      responses:
        "200":
          description: 更新角色成功
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 更新角色
      tags:
      - User
  /v1/admin/users/baseinfo:
    get:
      consumes:
      - application/json
      description: 列出用户信息，姓名，昵称，用户空间
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户信息
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 列出用户基本信息
      tags:
      - User
  /v1/admin/vcjobs/{name}:
    delete:
      consumes:
      - application/json
      description: 管理员删除用户作业
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Admin delete the job
      tags:
      - VolcanoJob
  /v1/aijobs:
    get:
      consumes:
      - application/json
      description: ListUserJob AI jobs by client-go
      produces:
      - application/json
      responses:
        "200":
          description: AI Job ListUserJob
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: ListUserJob AI jobs
      tags:
      - AIJob
  /v1/aijobs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an AI job by client-go
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Delete AI Job Response
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Delete an AI job
      tags:
      - AIJob
  /v1/aijobs/{id}/detail:
    get:
      consumes:
      - application/json
      description: GetDetail AI job details by client-go
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: AI Job Details
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: GetDetail AI job details
      tags:
      - AIJob
  /v1/aijobs/{id}/event:
    get:
      consumes:
      - application/json
      description: 获取AI任务的事件
      parameters:
      - description: Job ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 事件列表
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取AI任务的事件
      tags:
      - AIJob
  /v1/aijobs/{id}/yaml:
    get:
      consumes:
      - application/json
      description: 调用k8s get crd
      parameters:
      - description: vcjob-name
        in: query
        name: jobname
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务yaml
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取vcjob Yaml详情
      tags:
      - vcjob-jupyter
  /v1/aijobs/quota:
    get:
      consumes:
      - application/json
      description: Get the quota of the queue by client-go
      produces:
      - application/json
      responses:
        "200":
          description: Quota Information
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get the quota of the queue
      tags:
      - AIJob
  /v1/aijobs/training:
    post:
      consumes:
      - application/json
      description: CreateCustom a new AI job by client-go
      parameters:
      - description: CreateCustom AI Job Request
        in: body
        name: job
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: CreateCustom AI Job Response
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: CreateCustom a new AI job
      tags:
      - AIJob
  /v1/amdin/images/deleteimage:
    post:
      consumes:
      - application/json
      description: 管理员模式根据ID列表的ID更新Image的状态为Deleted，起到删除的功能
      parameters:
      - description: 删除镜像的ID
        in: body
        name: ID
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员模式根据ID列表删除Image
      tags:
      - ImagePack
  /v1/auth/switch:
    post:
      consumes:
      - application/json
      description: 读取body中的项目ID，生成新的 JWT Token
      parameters:
      - description: 项目ID
        in: body
        name: project_id
        required: true
        schema:
          $ref: '#/definitions/handler.SwitchQueueReq'
      produces:
      - application/json
      responses:
        "200":
          description: 用户上下文
          schema:
            $ref: '#/definitions/resputil.Response-handler_LoginResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 类似登录，切换项目并返回新的 JWT Token
      tags:
      - Auth
  /v1/context/attributes:
    put:
      consumes:
      - application/json
      description: Update the attributes of the current user
      parameters:
      - description: User attributes
        in: body
        name: attributes
        required: true
        schema:
          $ref: '#/definitions/model.UserAttribute'
      produces:
      - application/json
      responses:
        "200":
          description: User attributes updated
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Update user attributes
      tags:
      - Context
  /v1/context/email/code:
    post:
      consumes:
      - application/json
      description: generate random code and save, send it to the user's email
      produces:
      - application/json
      responses:
        "200":
          description: Successfully send email verification code to user
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Send User Verification Code for email
      tags:
      - Context
  /v1/context/email/update:
    post:
      consumes:
      - application/json
      description: judge code and update email for user
      produces:
      - application/json
      responses:
        "200":
          description: User email updated successfully
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Update after judging Verification Code for email
      tags:
      - Context
  /v1/context/queue:
    get:
      consumes:
      - application/json
      description: query the queue information by client-go
      produces:
      - application/json
      responses:
        "200":
          description: Volcano Queue Quota
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get the queue information
      tags:
      - Context
  /v1/dataset/{datasetId}/queuesIn:
    get:
      consumes:
      - application/json
      description: 数据集的共享队列
      parameters:
      - in: path
        name: datasetId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 数据集的共享队列
      tags:
      - Dataset
  /v1/dataset/{datasetId}/queuesNotIn:
    get:
      consumes:
      - application/json
      description: 没有该数据集权限的队列列表
      parameters:
      - in: path
        name: datasetId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 没有该数据集权限的队列列表
      tags:
      - Dataset
  /v1/dataset/{datasetId}/usersIn:
    get:
      consumes:
      - application/json
      description: 获取该数据集共享用户
      parameters:
      - in: path
        name: datasetId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取该数据集共享用户
      tags:
      - Dataset
  /v1/dataset/{datasetId}/usersNotIn:
    get:
      consumes:
      - application/json
      description: 没有该数据集权限的用户列表
      parameters:
      - in: path
        name: datasetId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 没有该数据集权限的用户列表
      tags:
      - Dataset
  /v1/dataset/cancelshare/queue:
    post:
      consumes:
      - application/json
      description: 普通用户取消数据共享队列
      parameters:
      - description: 共享数据集队列
        in: body
        name: queueReq
        required: true
        schema:
          $ref: '#/definitions/handler.cancelSharedQueueReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 普通用户取消数据共享队列
      tags:
      - Dataset
  /v1/dataset/cancelshare/user:
    post:
      consumes:
      - application/json
      description: 普通用户取消数据集共享
      parameters:
      - description: 共享数据集用户
        in: body
        name: Req
        required: true
        schema:
          $ref: '#/definitions/handler.cancelsharedUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 普通用户取消数据集共享用户
      tags:
      - Dataset
  /v1/dataset/create:
    post:
      consumes:
      - application/json
      description: 输入数据集名字和URL，创建数据集
      parameters:
      - description: 参数描述
        in: body
        name: datasetReq
        required: true
        schema:
          $ref: '#/definitions/handler.DatasetReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 创建数据集
      tags:
      - Dataset
  /v1/dataset/delete/{id}:
    delete:
      consumes:
      - application/json
      description: 删除数据集
      parameters:
      - in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除数据集
      tags:
      - Dataset
  /v1/dataset/detail/{datasetId}:
    get:
      consumes:
      - application/json
      description: 通过数据集id获取数据集信息
      parameters:
      - in: path
        name: datasetId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 通过数据集id获取数据集信息
      tags:
      - Dataset
  /v1/dataset/mydataset:
    get:
      consumes:
      - application/json
      description: 获取数据集
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取数据集
      tags:
      - Dataset
  /v1/dataset/share/queue:
    post:
      consumes:
      - application/json
      description: 跟队列共享数据集
      parameters:
      - description: 共享数据集队列
        in: body
        name: queueReq
        required: true
        schema:
          $ref: '#/definitions/handler.SharedQueueReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 跟队列共享数据集
      tags:
      - Dataset
  /v1/dataset/share/user:
    post:
      consumes:
      - application/json
      parameters:
      - description: 共享数据集用户
        in: body
        name: userReq
        required: true
        schema:
          $ref: '#/definitions/handler.SharedUserReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 跟用户共享数据集
      tags:
      - Dataset
  /v1/dataset/update:
    post:
      consumes:
      - application/json
      description: 更新数据集
      parameters:
      - description: 参数描述
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateDatasetreq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 更新数据集
      tags:
      - Dataset
  /v1/images/account:
    get:
      consumes:
      - application/json
      description: 获取未被分享该镜像的账户
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取未被分享该镜像的账户
      tags:
      - ImagePack
  /v1/images/available:
    get:
      consumes:
      - application/json
      description: 用userID & jobType 来过滤已完成的镜像
      parameters:
      - enum:
        - all
        - jupyter
        - webide
        - pytorch
        - tensorflow
        - kuberay
        - deepspeed
        - openmpi
        - custom
        in: query
        name: type
        required: true
        type: string
        x-enum-varnames:
        - JobTypeAll
        - JobTypeJupyter
        - JobTypeWebIDE
        - JobTypePytorch
        - JobTypeTensorflow
        - JobTypeKubeRay
        - JobTypeDeepSpeed
        - JobTypeOpenMPI
        - JobTypeCustom
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 用户在运行作业时选择镜像需要调用此接口，来获取可以用的镜像
      tags:
      - ImagePack
  /v1/images/change:
    post:
      consumes:
      - application/json
      description: 传入uint参数
      parameters:
      - description: 更新镜像的ID
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/image.ChangeImagePublicStatusRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 管理员模式下更新镜像的公共或私有状态
      tags:
      - ImagePack
  /v1/images/credential:
    post:
      consumes:
      - application/json
      description: 获取参数，生成变量，调用接口
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 创建用户的harbor项目，并返回用户的harbor项目的凭证
      tags:
      - ImagePack
  /v1/images/cudabaseimage:
    get:
      consumes:
      - application/json
      description: 获取所有可用的Cuda基础镜像列表
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取所有Cuda基础镜像
      tags:
      - ImagePack
  /v1/images/deleteimage:
    post:
      consumes:
      - application/json
      description: 用户模式根据ID列表的ID更新Image的状态为Deleted，起到删除的功能
      parameters:
      - description: 删除镜像的ID
        in: body
        name: ID
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 用户模式根据ID列表删除Image
      tags:
      - ImagePack
  /v1/images/deletekaniko:
    post:
      consumes:
      - application/json
      description: 遍历列表，根据ID更新Kaniko的状态为Deleted，起到删除的功能
      parameters:
      - description: 删除kaniko的IDList
        in: body
        name: IDList
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 根据IDList删除Kaniko entity
      tags:
      - ImagePack
  /v1/images/description:
    post:
      consumes:
      - application/json
      description: 更新描述
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 更新镜像的描述
      tags:
      - ImagePack
  /v1/images/dockerfile:
    post:
      consumes:
      - application/json
      description: 获取参数，提取Dockerfile中的基础镜像，调用接口
      parameters:
      - description: 创建ImagePack CRD
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/image.CreateByDockerfileRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 接受用户传入的Dockerfile和描述，创建镜像
      tags:
      - ImagePack
  /v1/images/envd:
    post:
      consumes:
      - application/json
      description: 获取参数，提取Dockerfile中的基础镜像，调用接口
      parameters:
      - description: 创建ImagePack CRD
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/image.CreateByEnvdRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 接受用户传入的Envd内容和描述，创建镜像
      tags:
      - ImagePack
  /v1/images/get:
    get:
      consumes:
      - application/json
      description: 获取imagepackname，搜索到imagepack的模板信息
      parameters:
      - description: 获取ImagePack的name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取imagepack的模板信息
      tags:
      - ImagePack
  /v1/images/grant:
    get:
      consumes:
      - application/json
      description: 获取镜像分享到的用户或账户
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取镜像分享到的用户或账户
      tags:
      - ImagePack
  /v1/images/harbor:
    get:
      consumes:
      - application/json
      description: 通过后端获取harbor的部署地址
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取harbor的部署地址
      tags:
      - ImagePack
  /v1/images/image:
    get:
      consumes:
      - application/json
      description: 返回该用户所有的镜像数据
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 用户获取所有镜像数据
      tags:
      - ImagePack
    post:
      consumes:
      - application/json
      description: 获取上传镜像的参数，生成变量，调用接口
      parameters:
      - description: 创建Image entity
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/image.UploadImageRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 用户上传镜像链接
      tags:
      - ImagePack
  /v1/images/image/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID更新Image的状态为Deleted，起到删除的功能
      parameters:
      - description: 删除镜像的ID
        in: body
        name: ID
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 根据ID删除Image
      tags:
      - ImagePack
  /v1/images/kaniko:
    get:
      consumes:
      - application/json
      description: 返回该用户所有的镜像构建数据
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 用户获取镜像构建信息
      tags:
      - ImagePack
    post:
      consumes:
      - application/json
      description: 获取参数，生成变量，调用接口
      parameters:
      - description: 创建ImagePack CRD & Kaniko entity
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/image.CreateKanikoRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 创建ImagePack CRD和数据库Kaniko entity
      tags:
      - ImagePack
  /v1/images/kaniko/{id}:
    delete:
      consumes:
      - application/json
      description: 根据ID更新Kaniko的状态为Deleted，起到删除的功能
      parameters:
      - description: 删除镜像的ID
        in: body
        name: ID
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 根据ID删除Kaniko entity
      tags:
      - ImagePack
  /v1/images/podname:
    get:
      consumes:
      - application/json
      description: 根据ID获取镜像构建Pod名称和命名空间
      parameters:
      - description: 镜像构建任务ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取镜像构建Pod名称
      tags:
      - ImagePack
  /v1/images/quota:
    get:
      consumes:
      - application/json
      description: 获取用户的project的详细信息
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取用户project的信息
      tags:
      - ImagePack
    post:
      consumes:
      - application/json
      description: 传入int64参数，查找用户的project，并更新镜像存储的配额
      parameters:
      - description: 更新镜像的ID和存储大小
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/image.UpdateProjectQuotaRequest'
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 更新project的配额
      tags:
      - ImagePack
  /v1/images/share:
    delete:
      consumes:
      - application/json
      description: 普通用户取消分享镜像到其他账户
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 取消分享镜像到账户
      tags:
      - ImagePack
    post:
      consumes:
      - application/json
      description: 普通用户分享镜像到其他账户或用户
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 分享镜像到账户或用户
      tags:
      - ImagePack
  /v1/images/tags:
    post:
      consumes:
      - application/json
      description: 更新标签
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 更新镜像的标签
      tags:
      - ImagePack
  /v1/images/type:
    post:
      consumes:
      - application/json
      description: 更新任务类型
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 更新镜像的任务类型
      tags:
      - ImagePack
  /v1/images/user:
    get:
      consumes:
      - application/json
      description: 获取未被分享该镜像的用户
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 获取未被分享该镜像的用户（支持名称模糊搜索）
      tags:
      - ImagePack
  /v1/images/valid:
    post:
      consumes:
      - application/json
      description: 通过获取的镜像链接列表，遍历其中的链接，检查是否有效
      produces:
      - application/json
      responses: {}
      security:
      - Bearer: []
      summary: 检查镜像链接是否有效
      tags:
      - ImagePack
  /v1/jobtemplate/{id}:
    get:
      consumes:
      - application/json
      description: 获取作业模板
      parameters:
      - description: 作业模板ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取作业模板
      tags:
      - jobtemplate
  /v1/jobtemplate/create:
    post:
      consumes:
      - application/json
      description: 创建作业模板
      parameters:
      - description: 作业模板
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.JobTemplateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 创建作业模板
      tags:
      - jobtemplate
  /v1/jobtemplate/delete/{id}:
    delete:
      consumes:
      - application/json
      description: 删除作业模板
      parameters:
      - description: 作业模板ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除作业模板
      tags:
      - jobtemplate
  /v1/jobtemplate/list:
    get:
      consumes:
      - application/json
      description: 展示所有作业模板
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 展示所有作业模板
      tags:
      - jobtemplate
  /v1/jobtemplate/update:
    put:
      consumes:
      - application/json
      description: 更新作业模板
      parameters:
      - description: 作业模板
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateJobTemplateReq'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 更新作业模板
      tags:
      - jobtemplate
  /v1/namespaces/{namespace}/pods/{name}/containers:
    get:
      consumes:
      - application/json
      description: 获取Pod的容器列表
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pod容器列表
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取Pod的容器列表
      tags:
      - Pod
  /v1/namespaces/{namespace}/pods/{name}/containers/{container}/log:
    get:
      consumes:
      - application/json
      description: 获取Pod容器日志
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      - description: 容器名称
        in: path
        name: container
        required: true
        type: string
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 每页数量
        in: query
        name: size
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Pod容器日志
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取Pod容器日志
      tags:
      - Pod
  /v1/namespaces/{namespace}/pods/{name}/containers/{container}/resources:
    put:
      consumes:
      - application/json
      description: edit pod's resources(cpu, mem)
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: edit pod's resources(cpu, mem)
      tags:
      - Operations
  /v1/namespaces/{namespace}/pods/{name}/events:
    get:
      consumes:
      - application/json
      description: 获取Pod的事件
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: 任务名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pod事件列表
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "404":
          description: 任务未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取Pod的事件
      tags:
      - Pod
  /v1/namespaces/{namespace}/pods/{name}/ingresses:
    delete:
      consumes:
      - application/json
      description: 根据规则名称删除指定的Ingress规则，同时删除关联的Service和Ingress
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      - description: 要删除的Ingress规则
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tool.PodIngressMgr'
      produces:
      - application/json
      responses:
        "200":
          description: Ingress规则删除成功
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误或Ingress规则未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "404":
          description: Pod未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除Pod的Ingress规则
      tags:
      - Pod
    get:
      consumes:
      - application/json
      description: 通过Pod注解获取相关的Ingress规则
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pod Ingress规则列表
          schema:
            $ref: '#/definitions/resputil.Response-tool_PodIngressResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "404":
          description: Pod未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取Pod的Ingress规则
      tags:
      - Pod
    post:
      consumes:
      - application/json
      description: 为指定Pod创建新的Ingress规则，规则名称和端口号必须唯一
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      - description: Ingress规则内容
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tool.PodIngressMgr'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的Ingress规则
          schema:
            $ref: '#/definitions/resputil.Response-tool_PodIngress'
        "400":
          description: 请求参数错误或规则冲突
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "404":
          description: Pod未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 创建新的Pod Ingress规则
      tags:
      - Pod
  /v1/namespaces/{namespace}/pods/{name}/nodeports:
    delete:
      consumes:
      - application/json
      description: 根据规则名称删除指定的NodePort规则，同时删除关联的Service
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      - description: 要删除的NodePort规则
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tool.PodNodeportMgr'
      produces:
      - application/json
      responses:
        "200":
          description: NodePort规则删除成功
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误或NodePort规则未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "404":
          description: Pod未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除Pod的NodePort规则
      tags:
      - Pod
    get:
      consumes:
      - application/json
      description: 通过Pod的labels选择相关的Service并获取NodePort规则
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pod NodePort规则列表
          schema:
            $ref: '#/definitions/resputil.Response-tool_PodNodeportResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "404":
          description: Pod未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取Pod的NodePort规则
      tags:
      - Pod
    post:
      consumes:
      - application/json
      description: 为指定Pod创建新的NodePort规则，规则名称和端口号必须唯一
      parameters:
      - description: 命名空间
        in: path
        name: namespace
        required: true
        type: string
      - description: Pod名称
        in: path
        name: name
        required: true
        type: string
      - description: NodePort规则内容
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/tool.PodNodeportMgr'
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建的NodePort规则
          schema:
            $ref: '#/definitions/resputil.Response-tool_PodNodeport'
        "400":
          description: 请求参数错误或规则冲突
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "404":
          description: Pod未找到
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 创建新的Pod NodePort规则
      tags:
      - Pod
  /v1/nodes:
    get:
      consumes:
      - application/json
      description: kubectl + prometheus获取节点基本信息
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述，注意这里返回Json字符串，swagger无法准确解析
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取节点基本信息
      tags:
      - Node
  /v1/nodes/{name}:
    get:
      consumes:
      - application/json
      description: kubectl + prometheus获取节点详细信息
      parameters:
      - description: 节点名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值
          schema:
            $ref: '#/definitions/resputil.Response-crclient_ClusterNodeDetail'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取节点详细信息
      tags:
      - Node
    put:
      consumes:
      - application/json
      description: 介绍函数的主要实现逻辑
      parameters:
      - description: 节点名称
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 更新节点调度状态
      tags:
      - 接口对应的标签
  /v1/nodes/{name}/gpu/:
    get:
      consumes:
      - application/json
      description: 查询prometheus获取GPU各节点的利用率
      parameters:
      - description: 节点名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-crclient_GPUInfo'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取GPU各节点的利用率
      tags:
      - Node
  /v1/nodes/{name}/pod/:
    get:
      consumes:
      - application/json
      description: kubectl + prometheus获取节点Pod信息
      parameters:
      - description: 节点名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取节点Pod信息
      tags:
      - Node
  /v1/nodes/{name}/taint:
    post:
      consumes:
      - application/json
      description: 通过nodeclient调用k8s接口添加节点污点
      parameters:
      - description: 节点名称+污点
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.NodeTaint'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 添加节点污点
      tags:
      - 接口对应的标签
  /v1/nodes/name/taint:
    delete:
      consumes:
      - application/json
      description: 匹配是否存在该污点，存在则删除
      parameters:
      - description: 节点名称+污点
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/handler.NodeTaint'
      produces:
      - application/json
      responses:
        "200":
          description: 成功返回值描述
          schema:
            $ref: '#/definitions/resputil.Response-string'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 删除节点的污点
      tags:
      - 接口对应的标签
  /v1/operations/add/locktime:
    put:
      consumes:
      - application/json
      description: set LockTime of the job
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: set LockTime of the job
      tags:
      - Operations
  /v1/operations/auto:
    delete:
      consumes:
      - application/json
      description: check job list and delete not using gpu job
      parameters:
      - in: query
        name: timeRange
        required: true
        type: integer
      - in: query
        name: util
        type: integer
      - in: query
        name: waitTime
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Auto delete not using gpu job list
      tags:
      - Operations
  /v1/operations/clear/locktime:
    put:
      consumes:
      - application/json
      description: clear LockTime of the job
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: clear LockTime of the job
      tags:
      - Operations
  /v1/operations/cronjob:
    get:
      consumes:
      - application/json
      description: Get all cronjob configs
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get all cronjob configs
      tags:
      - Operations
    put:
      consumes:
      - application/json
      description: Update one cronjob config
      parameters:
      - description: CronjobConfigs
        in: body
        name: use
        required: true
        schema:
          $ref: '#/definitions/operations.CronjobConfigs'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Update cronjob config
      tags:
      - Operations
  /v1/operations/keep/{name}:
    put:
      consumes:
      - application/json
      description: set KeepWhenLowResourceUsage of the job to the opposite value
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: set KeepWhenLowResourceUsage of the job to the opposite value
      tags:
      - Operations
  /v1/operations/waiting/jupyter:
    delete:
      consumes:
      - application/json
      description: check pending jupyter jobs, delete if not scheduled
      parameters:
      - in: query
        name: waitMinitues
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Delete unscheduled jupyter jobs
      tags:
      - Operations
  /v1/operations/whitelist:
    get:
      consumes:
      - application/json
      description: get job white list
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: Get job white list
      tags:
      - Operations
  /v1/projects:
    post:
      consumes:
      - application/json
      description: 从请求中获取账户名称、描述和配额，以当前用户为管理员，创建一个团队账户
      parameters:
      - description: 账户信息
        in: body
        name: data
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 成功创建账户，返回账户ID
          schema:
            $ref: '#/definitions/resputil.Response-handler_ProjectCreateResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 账户创建失败，返回错误信息
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 创建团队账户
      tags:
      - Project
  /v1/resources:
    get:
      consumes:
      - application/json
      description: If the vendorDomain parameter is provided, the API will return
        a list of resources that match the specified vendor domain.
      parameters:
      - description: "Vendor domain of the resource (For example: 'nvidia.com'\t)"
        in: query
        name: vendorDomain
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get a list of resources based on the specified parameters
      tags:
      - Resource
  /v1/resources/gpu/{gpuId}/networks:
    get:
      consumes:
      - application/json
      description: This API will return all RDMA resources linked to the specified
        GPU resource.
      parameters:
      - description: GPU Resource ID
        in: path
        name: gpuId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get all RDMA resources linked to a GPU resource
      tags:
      - Resource
  /v1/spjobs/{name}/events:
    get:
      consumes:
      - application/json
      description: 获取稀疏推荐作业关联的事件信息
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 事件列表
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取稀疏推荐作业的事件
      tags:
      - SpJob
  /v1/token/verify:
    get:
      consumes:
      - application/json
      description: 读取header的auth进行鉴权
      produces:
      - application/json
      responses:
        "200":
          description: Token 鉴权
          schema:
            $ref: '#/definitions/resputil.Response-handler_TokenReq'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 通过token鉴权
      tags:
      - Token
  /v1/users/{name}:
    get:
      consumes:
      - application/json
      description: 获取指定用户的详细信息
      parameters:
      - description: username
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户信息
          schema:
            $ref: '#/definitions/resputil.Response-handler_UserDetailResp'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取单个用户信息
      tags:
      - User
  /v1/users/email/verified:
    get:
      consumes:
      - application/json
      description: 检查邮箱是否已验证
      produces:
      - application/json
      responses:
        "200":
          description: 成功获取用户信息
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: 其他错误
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 检查邮箱是否已验证
      tags:
      - User
  /v1/vcjobs:
    get:
      consumes:
      - application/json
      description: Get the jobs of the user by client-go
      produces:
      - application/json
      responses:
        "200":
          description: Volcano Job List
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get the jobs of the user
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}:
    delete:
      consumes:
      - application/json
      description: Delete the job by client-go
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Delete the job
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/alert:
    put:
      consumes:
      - application/json
      description: set AlertEnabled of the job to the opposite value
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      summary: set AlertEnabled of the job to the opposite value
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/detail:
    get:
      consumes:
      - application/json
      description: 调用k8s get crd
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务描述
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取jupyter详情
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/event:
    get:
      consumes:
      - application/json
      description: 获取任务的事件
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取任务的事件
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/pods:
    get:
      consumes:
      - application/json
      description: 获取任务的Pod列表
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Pod列表
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取任务的Pod列表
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/ssh:
    post:
      consumes:
      - application/json
      description: 开启 SSH
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: SSH开启成功
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 开启 SSH
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/template:
    get:
      consumes:
      - application/json
      description: 获取任务的 template
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取任务的 template
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/token:
    get:
      consumes:
      - application/json
      description: Get the token of the job by logs
      parameters:
      - description: Job Name
        in: path
        name: jobName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-vcjob_JobTokenResp'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get the ingress base url and jupyter token of the job
      tags:
      - VolcanoJob
  /v1/vcjobs/{name}/yaml:
    get:
      consumes:
      - application/json
      description: 调用k8s get crd
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务yaml
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: 获取vcjob Yaml详情
      tags:
      - vcjob-jupyter
  /v1/vcjobs/all:
    get:
      consumes:
      - application/json
      description: 返回指定天数内的所有作业，默认为14天
      parameters:
      - default: 14
        description: Number of days to look back, default is 14
        in: query
        name: days
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: admin get Volcano Job List
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: admin Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Get all of the jobs
      tags:
      - VolcanoJob
  /v1/vcjobs/jupyter:
    post:
      consumes:
      - application/json
      description: Create a Jupyter job
      parameters:
      - description: Create Jupyter Job Request
        in: body
        name: CreateJupyterReq
        required: true
        schema:
          $ref: '#/definitions/vcjob.CreateJupyterReq'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Create a Jupyter job
      tags:
      - VolcanoJob
  /v1/vcjobs/jupyter/{name}/snapshot:
    post:
      consumes:
      - application/json
      description: Create nerdctl docker commit to snapshot the jupyter notebook
      parameters:
      - description: Job Name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-vcjob_JobTokenResp'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Create a snapshot of the jupyter notebook
      tags:
      - VolcanoJob
  /v1/vcjobs/tensorflow:
    post:
      consumes:
      - application/json
      description: Create a training job
      parameters:
      - description: CreateTrainingReq
        in: body
        name: CreateTrainingReq
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Create a training job
      tags:
      - VolcanoJob
  /v1/vcjobs/training:
    post:
      consumes:
      - application/json
      description: Create a training job
      parameters:
      - description: CreateTrainingReq
        in: body
        name: CreateTrainingReq
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "400":
          description: Request parameter error
          schema:
            $ref: '#/definitions/resputil.Response-any'
        "500":
          description: Other errors
          schema:
            $ref: '#/definitions/resputil.Response-any'
      security:
      - Bearer: []
      summary: Create a training job
      tags:
      - VolcanoJob
securityDefinitions:
  Bearer:
    description: 访问 /login 并获取 TOKEN 后，填入 'Bearer ${TOKEN}' 以访问受保护的接口
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
