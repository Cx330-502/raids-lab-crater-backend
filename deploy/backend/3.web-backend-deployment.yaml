# deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: crater-web-backend
  namespace: crater
  labels:
    app: crater-web-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: crater-web-backend
  template:
    metadata:
      labels:
        app: crater-web-backend
    spec:
      containers:
        - name: crater-web-backend-container
          image: ***REMOVED***/crater/web-backend@sha256:6c8bcfed0f92fa1d20dc3cf350fe5bfe42474e3f906902c99cd5260432cfce53
          imagePullPolicy: IfNotPresent
          command:
            - /controller
            - --config-file=/etc/config/config.yaml
          volumeMounts:
            - name: backend-conf
              mountPath: /etc/config/config.yaml
              subPath: config.yaml
          resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 128Mi
      serviceAccountName: crater-web-backend
      volumes:
        - name: backend-conf
          configMap:
            name: backend-config
            items:
              - key: config.yaml
                path: config.yaml
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: nvidia.com/gpu.present
                    operator: Exists
              topologyKey: kubernetes.io/hostname
---
# service
apiVersion: v1
kind: Service
metadata:
  name: crater-web-backend-svc
  namespace: crater
spec:
  selector:
    app: crater-web-backend
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8088
