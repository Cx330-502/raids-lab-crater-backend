# depolyment configuration variables
createNamespace: false
createMirationJob: false
web:
  backend:
    image:
      repository: ***REMOVED***
      tag: "85b120d6"
      pullPolicy: "IfNotPresent"
  migrate:
    image:
      repository: "***REMOVED***/migrate"
      tag: "v1"
      pullPolicy: "IfNotPresent"
    admin:
      username: "crater-admin"
      password: "admin"
  frontend:
    image:
      repository: ***REMOVED***
      tag: "38ac59f4"
      pullPolicy: "IfNotPresent"
    config:
      version: "1.0.0"
      url:
        host: ***REMOVED***
        apiBase: "https://***REMOVED***/api/"
        apiVersion: "v1"
        websiteBase: "https://***REMOVED***/website"
      grafana:
        overview:
          main: "https://gpu-grafana.***REMOVED***/d/f33ade9f-821d-4e96-a7f2-eb16c8b9c447/838ffad"
          schedule: "https://gpu-grafana.***REMOVED***/d/be9oh7yk24jy8f/crater-gpu-e8b083-e5baa6-e58f82-e88083"
          network: "https://gpu-grafana.***REMOVED***/d/8b7a8b326d7a6f1f04y7fh66368c67af/networking"
        node:
          basic: "https://gpu-grafana.***REMOVED***/d/k8s_views_nodes/crater-node-basic-dashboard"
          nvidia: "https://gpu-grafana.***REMOVED***/d/nvidia-dcgm-dashboard/crater-node-nvidia-dashboard"
        job:
          basic: "https://gpu-grafana.***REMOVED***/d/R4ZPFfyIz/crater-job-basic-dashboard"
          nvidia: "https://gpu-grafana.***REMOVED***/d/2CDE0AC7/crater-job-nvidia-dashboard"
          pod: "https://gpu-grafana.***REMOVED***/d/MhnFUFLSz/crater-pod-dashboard"
        user:
          nvidia: "https://gpu-grafana.***REMOVED***/d/user-nvidia-dcgm-dashboard/crater-user-nvidia-dashboard"
      featureFlags:
        enableRegister: true
  storage:
    image:
      repository: ***REMOVED***
      tag: "kjfd98d3"
      pullPolicy: "IfNotPresent"
  buildkit:
    image:
      repository: "***REMOVED***/docker.io/moby/buildkit"
      tag: "v0.18.2-rootless"
      pullPolicy: "IfNotPresent"
    replica: 3
    dockerconfigjson: ***REMOVED***
    httpsProxy: 192.168.5.58:1080
    noProxy: ***REMOVED***
    resources:
      requests:
        cpu: 8
        memory: 24Gi
      limits:
        cpu: 16
        memory: 48Gi
    cache:
      storageClass: "openebs-hostpath"
      storageSize: 400Gi
      maxUsedSpace: "400GB"
      minFreeSpace: "50GB"
      reservedSpace: "50GB"
    nodeSelectorIn:
      - huawei-81
      - huawei-82
      - huawei-cpu-1
      - huawei-cpu-2
      - huawei-cpu-3
      - huawei-cpu-4
      - huawei-cpu-5
      - huawei-cpu-6
      - huawei-cpu-7
      - huawei-cpu-8
  ingress:
    host: ***REMOVED***
  cronjob:
    image: ***REMOVED***/curl-jq:latest
    config:
      USERNAME: "***REMOVED***"
      PASSWORD: "***REMOVED***"
      HOST: ***REMOVED***
      jobs:
        lowGPUUtil:
          schedule: "0,30 * * * *"
          TIME_RANGE: "90"
          WAIT_TIME: "30"
          UTIL: "0"
        longTime:
          schedule: "0 */12 * * *"
          BATCH_DAYS: "4"
          INTERACTIVE_DAYS: "4"
        waitingJupyter:
          schedule: "*/5 * * * *"
          JUPYTER_WAIT_MINUTES: "5"
  grafana:
    image: ***REMOVED***/docker.io/library/nginx:1.27.3-bookworm
    address: http://prometheus-grafana.monitoring
    token: Bearer ***REMOVED***
    ancestor: https://***REMOVED***
    host: gpu-grafana.***REMOVED***
nodeSelector:
  node-role.kubernetes.io/control-plane: ""
tolerations:
  - key: node-role.kubernetes.io/control-plane
    operator: Exists
    effect: NoSchedule
# Backend configuration variables
backendConfig:
  enableLeaderElection: false
  leaderElectionID: 1ca428e5.training-operator.kubeflow.org
  prometheusAPI: http://prometheus-kube-prometheus-prometheus.monitoring:9090
  serverAddr: :8088
  metricsAddr: :8080
  probeAddr: :8081
  monitoringPort: 9443
  host: ***REMOVED***
  postgres:
    host: ***REMOVED***
    port: 5432
    dbname: crater
    user: crater
    password: ***REMOVED***
    sslmode: disable
    TimeZone: Asia/Shanghai
  userSpacePrefix: ***REMOVED***
  accountSpacePrefix: crater-accounts
  publicSpacePrefix: ***REMOVED***
  workspace:
    namespace: crater-workspace
    rwxpvcName: crater-rw-storage
    roxpvcName: crater-ro-storage
    ingressName: crater-jobs-ingress
    imageNameSpace: crater-images
  act:
    strictRegisterMode: true
    uidServerURL: http://192.168.5.59:5000/get_user_id
    image:
      registryServer: ***REMOVED***
      registryUser: ***REMOVED***
      registryPass: ***REMOVED***
      registryProject: crater
      registryAdmin: admin
      registryAdminPass: ***REMOVED***
    openAPI:
      url: ***REMOVED***
      chameleonKey: ***REMOVED***
      accessToken: ***REMOVED***
    auth:
      userName: ***REMOVED***
      password: ***REMOVED***
      address: ***REMOVED***
      searchDN: OU=Lab,OU=ACT,DC=lab,DC=act,DC=buaa,Dc=edu,DC=cn
    smtp:
      host: ***REMOVED***
      port: 25
      user: notify
      password: ***REMOVED***
      notify: notify@***REMOVED***
  schedulerPlugins:
    aijob:
      aijobEn: false
      enableProfiling: true
      profilingTimeout: 120
    spjob:
      spjobEn: false
      predictionServiceAddress: ***REMOVED***
  dindArgs:
    buildkitImage: ***REMOVED***/user-huangsy/buildkit/buildctl:v0.18.2
    nerdctlImage: ***REMOVED***/nerdctl:2.0.1-retry
    envdImage: ***REMOVED***/user-huangsy/envd-build-frontend:v1.2.0
# cert-manager configuration variables
# Usage:
# helm upgrade --install crater ./charts/crater \
# --namespace crater \
# --create-namespace \
# --set-string tls.base.cert="$(cat ***REMOVED***/fullchain.cer)" \
# --set-string tls.base.key="$(cat ***REMOVED***/***REMOVED***.key)" \
# --set-string tls.forward.cert="$(cat ***REMOVED***/fullchain.cer)" \
# --set-string tls.forward.key="$(cat ***REMOVED***/***REMOVED***.key)"
tls:
  base:
    enabled: false
    cert: "===hdgddh==="
    key: "==="
  forward:
    enabled: false
    cert: "===hdgddh==="
    key: "==="
ssConfig:
  content: |
    postgres:
      host: ***REMOVED***
      port: 5432
      dbname: crater
      user: crater
      password: ***REMOVED***
      sslmode: disable
      TimeZone: Asia/Shanghai
    userSpacePrefix: ***REMOVED***
    accountSpacePrefix:  crater-accounts
    publicSpacePrefix: ***REMOVED***
# pvc configuration variables
storage:
  create: false
  request: 2Ti
  storageClass: "nfs-client"
  rwName: "crater-rw-storage"
  roName: "crater-ro-storage"
